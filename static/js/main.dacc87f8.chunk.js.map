{"version":3,"sources":["components/Navbar.jsx","assets/logo2s.png","assets/categories/dairy.jpg","assets/categories/Fats.jpg","assets/categories/fish.jpg","assets/categories/Fruits.jpg","assets/categories/meat.jpg","assets/categories/Protein.jpg","utils/data.js","assets/categories/veg.jpg","components/Sidebar.jsx","client.js","components/Pin.jsx","components/MasonryLayout.jsx","components/Spinner.jsx","components/Feed.jsx","components/PinDetail.jsx","components/UserProfile.jsx","utils/fetchUser.js","components/CreatePin.jsx","components/Search.jsx","assets/foods.mp4","assets/logoss.png","components/Login.jsx","components/ReadIngredient.jsx","components/CreateIngredient.jsx","container/Pins.jsx","container/Home.jsx","App.js","serviceWorkerRegistration.js","index.js"],"names":["Navbar","searchTerm","setSearchTerm","user","navigate","useNavigate","className","Provider","value","color","type","onChange","e","target","replace","placeholder","onFocus","to","_id","src","image","alt","style","backgroundColor","isAdmin","background","categories","name","dairy","fats","protein","fruits","fish","meat","feedQuery","searchQuery","userQuery","userId","allIngredientsQuery","isNotActiveStyle","isActiveStyle","Sidebar","closeToggle","handleCloseSidebar","onClick","logo","isActive","fontWeight","slice","length","map","category","userName","client","sanityClient","projectId","process","dataset","apiVersion","useCdn","token","builder","imageUrlBuilder","urlFor","source","Pin","pin","useState","postHovered","setPostHovered","savingPost","setSavingPost","postedBy","localStorage","getItem","JSON","parse","clear","alreadySaved","save","filter","item","sub","onMouseEnter","onMouseLeave","width","url","height","stopPropagation","id","ToRemove","patch","unset","commit","then","window","location","reload","Unsave","setIfMissing","insert","_key","uuidv4","_type","_ref","savePin","delete","breakpointColumnsObj","default","MasonryLayout","pins","breakpointCols","Spinner","message","Feed","setPins","loading","setLoading","categoryId","useParams","useEffect","query","fetch","data","ideaName","PinDetail","pinId","pinDetail","setPinDetail","comment","setComment","addingComment","setAddingComment","User","fetchPinDetails","pinDetailQuery","query1","res","title","about","ingredientListPost","info","ingredientName","amount","metric","procedure","i","nutritionPost","calories","totalfat","saturatedfat","transfat","cholesterol","sodium","totalcarb","dietaryFiber","sugar","vitaminA","vitaminC","calcium","iron","comments","deleteComment","activeBtnStyles","notActiveBtnStyles","UserProfile","setUser","text","setText","activeBtn","setActiveBtn","users","createdPinsQuery","userCreatedPinsQuery","savedPinsQuery","userSavedPinsQuery","googleLogout","fontSize","textContent","CreatePin","setTitle","setAbout","loadingIngredient","setLoadingIngredient","fields","setFields","ingredientFields","setIngredientFields","nonIngredientFields","setNonIngredientFields","setCategory","imageAsset","setImageAsset","wrongImageType","setWrongImageType","setProcedure","ModalOpen","setModalOpen","nonIngredient","setNonIngredient","dropdownClick","setDropdownClick","chosenIngredient","setChosenIngredient","nonChosenIngredient","setNonChosenIngredient","nonChosenMetric","setNonChosenMetric","nonChosenAmount","setNonChosenAmount","chosenIngredientObject","setchosenIngredientObject","ingredientDropDown","setIngredientDropDown","chosenMetric","setChosenMetric","setAmount","finalRecipeObject","setFinalRecipeObject","nutrientTable","setNutrientTable","searchChosenIngredientQuery","toLowerCase","dropdownClickHandlerClose","add","reduce","previousValue","currentValue","selectedFile","files","assets","upload","contentType","filename","document","catch","error","console","log","onBlur","a","ingAdminName","step","min","disable","selected","hidden","baseSize","baseSizeNum","find","doc","parseInt","newArray","setTimeout","handleIngredientList","class","nonIngredientConfirm","href","marginLeft","position","newDataArr","splice","deleteFinalRecipeObjectHandler","u","rows","onChangeValue","inputdata","handleProcedureChange","deleteProcedure","handleProcedureDelete","qwe","handleProcedureAdd","asset","create","Search","Login","responseGoogle","response","userResponse","jwt_decode","credential","setItem","stringify","picture","createIfNotExists","shareVideo","loop","controls","muted","autoPlay","clientId","onSuccess","onFailure","cookiePolicy","ReadIngredient","uploadSuccessAlert","setuploadSuccessAlert","ingredientList","setIngredientList","searchIngredientTerm","setSearchIngredientTerm","refresher","setRefresher","searchIngredientQuery","lassName","key","c","CreateIngredient","setIngAdminName","baseSizeMetric","setBaseSizeMetric","setCalories","totalFat","setTotalFat","saturatedFat","setSaturatedFat","transFat","settransFat","setCholesterol","setSodium","totalCarbohydrates","setTotalCarbohydrates","setDietaryFiber","setSugar","setProtein","setVitaminA","setVitaminC","setCalcium","setIron","uploadFailedAlert","setuploadFailedAlert","baseSizeList","setBaseSizeList","ModalHandlerClose","scope","colSpan","deleteBaseSizeHandler","baseSizeItem","Pins","path","element","Home","toggleSidebar","setToggleSidebar","scrollRef","useRef","userInfo","current","scrollTo","logoss","ref","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","ReactDOM","render","getElementById","URL","origin","addEventListener","headers","get","status","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.dacc87f8.chunk.js","sourcesContent":["/* eslint-disable react/jsx-no-constructed-context-values */\r\nimport React from 'react';\r\nimport { IconContext } from 'react-icons';\r\nimport { IoMdAdd, IoMdSearch } from 'react-icons/io';\r\nimport { BiFoodMenu } from 'react-icons/bi';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n\r\nconst Navbar = ({ searchTerm, setSearchTerm, user }) => {\r\n  const navigate = useNavigate();\r\n\r\n  if (user) {\r\n    return (\r\n      <div className=\"flex gap-2 md:gap-5 w-full mt-5 pb-7\">\r\n        <div className=\"flex justify-start items-center w-full px-2 rounded-md bg-white border-none outline-none focus-within:shadow-sm\">\r\n          <IconContext.Provider value={{ color: '#008083', className: 'global-class-name' }}>\r\n            <div>\r\n              <IoMdSearch />\r\n            </div>\r\n          </IconContext.Provider>\r\n          <input\r\n            type=\"text\"\r\n            onChange={(e) => setSearchTerm(e.target.value.replace(/[^\\w\\s]/gi, \"\"))}\r\n            placeholder=\"Search for recipes\"\r\n            value={searchTerm}\r\n            onFocus={() => navigate('/search')}\r\n            className=\"p-2 w-full bg-white outline-none\"\r\n          />\r\n        </div>\r\n        <div className=\"flex gap-3 \">\r\n          <Link to={`user-profile/${user?._id}`} className=\"hidden md:block\">\r\n            <img src={user.image} alt=\"user-pic\" className=\"w-14 h-12 rounded-lg \" />\r\n          </Link>\r\n          {/* add recipe */}\r\n          <Link to=\"/create-pin\" className=\"text-white rounded-lg w-12 h-12 md:w-14 md:h-12 flex justify-center items-center\" alt=\"Click this to create recipe\" aria-label=\"Proceed to create recipe when clicked\" style={{ backgroundColor: '#008083' }}>\r\n            <IoMdAdd />\r\n          </Link>\r\n          {user.isAdmin\r\n            && (\r\n              // admin\r\n              <Link to=\"/create-ingredient\" className=\"bg-black text-white rounded-lg w-12 h-12 md:w-14 md:h-12 flex justify-center items-center\">\r\n                <IconContext.Provider value={{ color: '#FF9F1C', className: 'global-class-name', background: '#008083' }}>\r\n                  <BiFoodMenu />\r\n                </IconContext.Provider>\r\n              </Link>\r\n            )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default Navbar;\r\n","export default __webpack_public_path__ + \"static/media/logo2s.23aa96e6.png\";","export default __webpack_public_path__ + \"static/media/dairy.00e60176.jpg\";","export default __webpack_public_path__ + \"static/media/Fats.ddb0d426.jpg\";","export default __webpack_public_path__ + \"static/media/fish.ef9752ef.jpg\";","export default __webpack_public_path__ + \"static/media/Fruits.9e3315e1.jpg\";","export default __webpack_public_path__ + \"static/media/meat.111f30aa.jpg\";","export default __webpack_public_path__ + \"static/media/Protein.ae05b258.jpg\";","// how to fet queries\r\n// categories\r\n\r\nimport dairy from '../assets/categories/dairy.jpg';\r\nimport fats from '../assets/categories/Fats.jpg';\r\nimport fish from '../assets/categories/fish.jpg';\r\nimport fruits from '../assets/categories/Fruits.jpg';\r\nimport meat from '../assets/categories/meat.jpg';\r\nimport protein from '../assets/categories/Protein.jpg';\r\nimport veg from '../assets/categories/veg.jpg';\r\n\r\nexport const metrics = [\r\n  {\r\n    name: 'Tbsp',\r\n    \r\n  },\r\n  {\r\n    name: 'Kg',\r\n   \r\n  },\r\n  {\r\n    name: 'Grams',\r\n    \r\n  },\r\n  {\r\n    name: 'Protein',\r\n    \r\n  },\r\n  {\r\n    name: 'Fruits',\r\n  \r\n  },\r\n  {\r\n    name: 'Fish and Seafoods',\r\n    \r\n  },\r\n  \r\n];\r\n\r\nexport const categories = [\r\n  {\r\n    name: 'Vegetables',\r\n    image: veg,\r\n\r\n  },\r\n  {\r\n    name: 'Dairy Foods',\r\n    image: dairy,\r\n  },\r\n  {\r\n    name: 'Fats',\r\n    image: fats,\r\n  },\r\n  {\r\n    name: 'Protein',\r\n    image: protein,\r\n  },\r\n  {\r\n    name: 'Fruits',\r\n    image: fruits,\r\n  },\r\n  {\r\n    name: 'Fish and Seafoods',\r\n    image: fish,\r\n  },\r\n  {\r\n    name: 'Meat and Poultry',\r\n    image: meat,\r\n  },\r\n  {\r\n    name: 'others',\r\n    image: 'https://i.pinimg.com/236x/2e/63/c8/2e63c82dfd49aca8dccf9de3f57e8588.jpg',\r\n  },\r\n];\r\n\r\n\r\nconst fakeDataIng = [\r\n  {\r\n    ingAdminName: \"Chicken\",\r\n    baseSize: [\r\n      {\r\n        baseSizeNum: \"kg\",\r\n        calories: \"100\",\r\n        calcium: \"105\"\r\n      },\r\n      {\r\n        baseSizeNum: \"g\",\r\n        calories: \"20\",\r\n        calcium: \"25\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    ingAdminName: \"Butter\",\r\n    baseSize: [\r\n      {\r\n        baseSizeNum: \"kg\",\r\n        calories: \"500\",\r\n        calcium: \"505\"\r\n      },\r\n      {\r\n        baseSizeNum: \"g\",\r\n        calories: \"300\",\r\n        calcium: \"305\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n\r\n\r\nexport const feedQuery = `*[_type == \"pin\"] | order(_createdAt desc) {\r\n  image{\r\n    asset->{\r\n      url\r\n    }\r\n  },\r\n      _id,\r\n      procedure[],\r\n      ingredient[],\r\n      ingredientVal[],\r\n      metric[],\r\n      postedBy->{\r\n        _id,\r\n        userName,\r\n        image\r\n      },\r\n      save[]{\r\n        _key,\r\n        postedBy->{\r\n          _id,\r\n          userName,\r\n          image\r\n        },\r\n      },\r\n    } `;\r\n\r\n\r\n    export const allUser = `*[_type == 'user']\r\n    {\r\n      _id,\r\n      image,\r\n      userName\r\n    }`;\r\n\r\nexport const pinDetailQuery = (pinId) => {\r\n  const query = `*[_type == \"pin\" && _id == '${pinId}']{\r\n    image{\r\n      asset->{\r\n        url\r\n      }\r\n    },\r\n    _id,\r\n    title, \r\n    about,\r\n    ingredientListPost,\r\n    nutritionPost,\r\n    procedure[],\r\n    category,\r\n    postedBy->{\r\n      _id,\r\n      userName,\r\n      image\r\n    },\r\n   save[]{\r\n      postedBy->{\r\n        _id,\r\n        userName,\r\n        image\r\n      },\r\n    },\r\n    comments[]{\r\n      comment,\r\n      _key,\r\n      postedBy->{\r\n        _id,\r\n        userName,\r\n        image\r\n      },\r\n    }\r\n  }`;\r\n  return query;\r\n};\r\n\r\nexport const pinDetailMorePinQuery = (pin) => {\r\n  const query = `*[_type == \"pin\" && category == '${pin.category}' && _id != '${pin._id}' ]{\r\n    image{\r\n      asset->{\r\n        url\r\n      }\r\n    },\r\n    _id,\r\n    procedure[],\r\n    ingredientListPost,\r\n    nutritionPost,\r\n    postedBy->{\r\n      _id,\r\n      userName,\r\n      image\r\n    },\r\n    save[]{\r\n      _key,\r\n      postedBy->{\r\n        _id,\r\n        userName,\r\n        image\r\n      },\r\n    },\r\n  }`;\r\n  return query;\r\n};\r\n\r\nexport const searchQuery = (searchTerm) => {\r\n  const query = `*[_type == \"pin\" && title match '${searchTerm}*' || category match '${searchTerm}*' || about match '${searchTerm}*' || ingredient match '${searchTerm}*' || postedBy->userName match '${searchTerm}*' ]{\r\n    image{\r\n      asset->{\r\n        url\r\n      }\r\n    },\r\n    _id,\r\n    procedure[],\r\n    ingredientListPost,\r\n    nutritionPost,\r\n    postedBy->{\r\n      _id,\r\n      userName,\r\n      image\r\n    },\r\n    save[]{\r\n      _key,\r\n      postedBy->{\r\n        _id,\r\n        userName,\r\n        image\r\n      },\r\n    },\r\n  }`;\r\n  return query;\r\n};\r\n\r\nexport const userQuery = (userId) => {\r\n  const query = `*[_type == \"user\" && _id == '${userId}']`;\r\n  return query;\r\n};\r\n\r\nexport const userSearch = (searchTerm) => {\r\n  const query = `*[_type == \"user\" && userName match \"${searchTerm}*\"]{\r\n    _id,\r\n    image,\r\n    userName\r\n  }`;\r\n  return query;\r\n};\r\n \r\n\r\n\r\nexport const userCreatedPinsQuery = (userId) => {\r\n  const query = `*[ _type == 'pin' && userId == '${userId}'] | order(_createdAt desc){\r\n    image{\r\n      asset->{\r\n        url\r\n      }\r\n    },\r\n    _id,\r\n    procedure[],\r\n    ingredientListPost,\r\n    nutritionPost,\r\n    postedBy->{\r\n      _id,\r\n      userName,\r\n      image\r\n    },\r\n    save[]{\r\n      _key,\r\n      postedBy->{\r\n        _id,\r\n        userName,\r\n        image\r\n      },\r\n    },\r\n  }`;\r\n  return query;\r\n};\r\n\r\nexport const userSavedPinsQuery = (userId) => {\r\n  const query = `*[_type == 'pin' && '${userId}' in save[].userId ] | order(_createdAt desc) {\r\n    image{\r\n      asset->{\r\n        url\r\n      }\r\n    },\r\n    _id,\r\n    procedure[],\r\n    ingredientListPost,\r\n    nutritionPost,\r\n    postedBy->{\r\n      _id,\r\n      userName,\r\n      image\r\n    },\r\n    save[]{\r\n      _key,\r\n      postedBy->{\r\n        _id,\r\n        userName,\r\n        image\r\n      },\r\n    },\r\n  }`;\r\n  return query;\r\n};\r\n\r\n// export const userFollowingPost = (userId) => {\r\n//   const query = `*[ _type == \"user\" && id == '${userId}'] | order(_createdAt desc)\r\n//   {\r\n//   'pin': *[_type == 'pin' && references(^._id)]\r\n//    {\r\n//     image{\r\n//       asset->{\r\n//         url\r\n//       }\r\n//     },\r\n//     _id,\r\n//     title, \r\n//     about,\r\n//     ingredientListPost,\r\n//     nutritionPost,\r\n//     procedure[],\r\n//     category,\r\n//     postedBy->{\r\n//       _id,\r\n//       userName,\r\n//       image\r\n//     },\r\n//    save[]{\r\n//       postedBy->{\r\n//         _id,\r\n//         userName,\r\n//         image\r\n//       },\r\n//     },\r\n//     comments[]{\r\n//       comment,\r\n//       _key,\r\n//       postedBy->{\r\n//         _id,\r\n//         userName,\r\n//         image\r\n//       },\r\n//     }\r\n//   }\r\n//    } `;\r\n//   return query;\r\n// };\r\n\r\n// export const userfollowers = (userId) => {\r\n//   const query = `*[_type == 'user' && _id == '${userId}'] | order(_createdAt desc) {\r\n//     follow[]{\r\n//       postedBy->{\r\n//         _id,\r\n//         userName,\r\n//         image\r\n//       },\r\n//     },\r\n//   }`;\r\n//   return query;\r\n// };\r\n\r\nexport const ingredientBaseValue = (pinDetail) => {\r\n  const query = `*[ingAdminName == '${pinDetail.ingredient}'].baseSize[baseSizeNum == '${pinDetail.metric}']\r\n  {\r\n    calcium,\r\n    calories,\r\n    cholesterol,\r\n    dietaryFiber,\r\n    iron,\r\n    protein,\r\n    saturatedfat,\r\n    sodium,\r\n    sugar,\r\n    totalcarb,\r\n    totalfat,\r\n    transfat,\r\n    vitaminA,\r\n    vitaminC,\r\n  }`;\r\n  return query;\r\n};\r\n  export const fetchIngredientValue = (pinDetail) => {\r\n    const query = `*[ingAdminName == '${pinDetail?.ingredient}'].baseSize[]\r\n    {\r\n      calcium,\r\n      calories,\r\n      cholesterol,\r\n      dietaryFiber,\r\n      iron,\r\n      protein,\r\n      saturatedfat,\r\n      sodium,\r\n      sugar,\r\n      totalcarb,\r\n      totalfat,\r\n      transfat,\r\n      vitaminA,\r\n      vitaminC,\r\n    }`;\r\n    return query;\r\n};\r\n\r\n\r\n// export const userfollowing = `*[_type == \"user\"] | order(_createdAt desc) {\r\n//   image,\r\n//   _id,\r\n//   _type,\r\n//   userName,\r\n//   follow[]{\r\n//         _key,\r\n//         postedBy->{\r\n//           _id,\r\n//           userName,\r\n//           image\r\n//         },\r\n//       },\r\n// } `;\r\n\r\nexport const ingval = `*[IngredientAdmin == \"ChokoNyoks\"]`;\r\n\r\nexport const image = '*[_type == \"user\"]';\r\n\r\nexport const allIngredientsQuery = `*[_type == 'ingredientAdmin']{\r\n  ingAdminName,\r\n  baseSize[]{\r\n    baseSizeNum,\r\n  calcium,\r\n  calories,\r\n  cholesterol,\r\n  dietaryFiber,\r\n  iron,\r\n  protein,\r\n  saturatedfat,\r\n  sodium,\r\n  sugar,\r\n  totalfat,\r\n  transfat,\r\n  vitaminA,\r\n  vitaminC,\r\n  totalcarb,\r\n  _key\r\n  },\r\n  _key\r\n}`;\r\n\r\n\r\n\r\nexport const searchIngredientQuery = (searchIngredientTerm) => {\r\n  const query = `*[_type == 'ingredientAdmin'  && ingAdminName match '${searchIngredientTerm}*' ]{\r\n    ingAdminName,\r\n    baseSize[]{\r\n      baseSizeNum,\r\n    calcium,\r\n    calories,\r\n    cholesterol,\r\n    dietaryFiber,\r\n    iron,\r\n    protein,\r\n    saturatedfat,\r\n    sodium,\r\n    sugar,\r\n    totalfat,\r\n    transfat,\r\n    vitaminA,\r\n    vitaminC,\r\n    totalcarb,\r\n    _key\r\n    },\r\n    _key\r\n  }`;\r\n  return query;\r\n};\r\n\r\n\r\nexport const searchChosenIngredientQuery = (chosenIngredient) => {\r\n  const query = `*[_type == 'ingredientAdmin'  && ingAdminName match '${chosenIngredient}*' ]{\r\n    ingAdminName,\r\n    baseSize[]{\r\n      baseSizeNum,\r\n    calcium,\r\n    calories,\r\n    cholesterol,\r\n    dietaryFiber,\r\n    iron,\r\n    protein,\r\n    saturatedfat,\r\n    sodium,\r\n    sugar,\r\n    totalfat,\r\n    transfat,\r\n    vitaminA,\r\n    vitaminC,\r\n    totalcarb,\r\n    _key\r\n    },\r\n    _key\r\n  }`;\r\n  return query;\r\n};","export default __webpack_public_path__ + \"static/media/veg.08a93c27.jpg\";","import React from 'react';\r\nimport { IoIosArrowForward } from 'react-icons/io';\r\nimport { RiHomeFill, RiUserFollowLine } from 'react-icons/ri';\r\n\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nimport logo from '../assets/logo2s.png';\r\nimport { categories } from '../utils/data';\r\n\r\nconst isNotActiveStyle = 'flex items-center px-5 gap-3 text-gray-500 hover:text-nOrange transition-all duration-200 ease-in-out capitalize';\r\nconst isActiveStyle = 'flex items-center px-5 gap-3 font-extrabold border-r-2 border-black  transition-all duration-200 ease-in-out capitalize';\r\n\r\nconst Sidebar = ({ closeToggle, user }) => {\r\n  const handleCloseSidebar = () => {\r\n    if (closeToggle) closeToggle(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col justify-between bg-white h-full overflow-y-scroll min-w-210 hide-scrollbar\">\r\n      <div className=\"flex flex-col\">\r\n        <Link\r\n          to=\"/\"\r\n          className=\"flex px-5 gap-2 my-6 pt-1 w-190 items-center\"\r\n          onClick={handleCloseSidebar}\r\n        >\r\n          <img src={logo} alt=\"logo\" className=\"w-full\" />\r\n        </Link>\r\n        <div className=\"flex flex-col gap-5\">\r\n\r\n          <NavLink\r\n            to=\"/\"\r\n            className={({ isActive }) => (isActive ? isActiveStyle : isNotActiveStyle)}\r\n            onClick={handleCloseSidebar}\r\n            style={{ color: '#008083', fontWeight: '600' }}\r\n          >\r\n            <RiHomeFill />\r\n            Home\r\n          </NavLink>\r\n{/* \r\n          <NavLink\r\n            to=\"/FollowFeed\"\r\n            className={({ isActive }) => (isActive ? isActiveStyle : isNotActiveStyle)}\r\n            onClick={handleCloseSidebar}\r\n            style={{ color: '#999093', fontWeight: '600' }}\r\n          >\r\n            <RiUserFollowLine />\r\n            My Following\r\n          </NavLink> */}\r\n\r\n\r\n          <h3 className=\"mt-2 px-5 text-base text-gray-500 2xl:text-xl font-semibold\">Categories</h3>\r\n          {categories.slice(0, categories.length - 1).map((category) => (\r\n            <NavLink\r\n              to={`/category/${category.name}`}\r\n              className={({ isActive }) => (isActive ? isActiveStyle : isNotActiveStyle)}\r\n              onClick={handleCloseSidebar}\r\n              key={category.name}\r\n            >\r\n              <img src={category.image} className=\"w-8 h-8 rounded-full shadow-sm text-green-300\" />\r\n              {category.name}\r\n            </NavLink>\r\n          ))}\r\n        </div>\r\n        \r\n          \r\n       \r\n      </div>\r\n     \r\n        \r\n      {user && (\r\n        \r\n        <Link\r\n          to={`user-profile/${user._id}`}\r\n          className=\"flex my-5 mb-3 gap-2 p-2 items-center bg-white rounded-lg shadow-lg mx-3 font-semibold\"\r\n          onClick={handleCloseSidebar}\r\n        >\r\n          <img src={user.image} className=\"w-10 h-10 rounded-full\" alt=\"user-profile\" />\r\n          <p>{user.userName}</p>\r\n          <IoIosArrowForward />\r\n        </Link>\r\n      )}\r\n      \r\n    </div> \r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import sanityClient from '@sanity/client';\r\nimport imageUrlBuilder from '@sanity/image-url';\r\n\r\nexport const client = sanityClient({\r\n  projectId: process.env.REACT_APP_SANITY_PROJECT_ID,\r\n  dataset: 'production',\r\n  apiVersion: '2021-11-16',\r\n  useCdn: true,\r\n  token: process.env.REACT_APP_SANITY_TOKEN,\r\n});\r\n\r\nconst builder = imageUrlBuilder(client);\r\n\r\nexport const urlFor = (source) => builder.image(source);\r\n","import React, { useState } from 'react';\r\n// eslint-disable-next-line no-unused-vars\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { AiTwotoneDelete } from 'react-icons/ai';\r\nimport { client, urlFor } from '../client';\r\n\r\nconst Pin = ({ pin }) => {\r\n  const [postHovered, setPostHovered] = useState(false);\r\n  const [savingPost, setSavingPost] = useState(false);\r\n  const navigate = useNavigate();\r\n  const { postedBy, image, _id } = pin;\r\n\r\n  // delete a post\r\n  const deletePin = (id) => {\r\n    client\r\n      .delete(id)\r\n      .then(() => {\r\n        window.location.reload(false);\r\n      });\r\n      \r\n  };\r\n  const user = localStorage.getItem('user') !== 'undefined' ? JSON.parse(localStorage.getItem('user')) : localStorage.clear();\r\n\r\n  let alreadySaved = pin?.save?.filter((item) => item?.postedBy?._id === user?.sub);\r\n\r\n  alreadySaved = alreadySaved?.length > 0 ? alreadySaved : [];\r\n\r\n  const savePin = (id) => {\r\n    if (alreadySaved?.length === 0) {\r\n      setSavingPost(true);\r\n\r\n      client\r\n        .patch(id)\r\n        .setIfMissing({ save: [] })\r\n        .insert('after', 'save[-1]', [{\r\n          _key: uuidv4(),\r\n          userId: user?.sub,\r\n          postedBy: {\r\n            _type: 'postedBy',\r\n            _ref: user?.sub,\r\n          },\r\n        }])\r\n        .commit()\r\n        .then(() => {\r\n          window.location.reload(false);\r\n          setSavingPost(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  // unsave a post\r\n  const Unsave = (id) => {\r\n    const ToRemove = [`save[userId==\"${user?.sub}\"]`];\r\n    client\r\n      .patch(id)\r\n      .unset(ToRemove)\r\n      .commit()\r\n      .then(() => {\r\n        window.location.reload(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"m-2\">\r\n      <div\r\n        onMouseEnter={() => setPostHovered(true)}\r\n        onMouseLeave={() => setPostHovered(false)}\r\n        onClick={() => navigate(`/pin-detail/${_id}`)}\r\n        className=\" relative cursor-zoom-in w-auto hover:shadow-lg rounded-lg overflow-hidden transition-all duration-500 ease-in-out\"\r\n      >\r\n\r\n        {image && (\r\n        <img className=\"rounded-lg w-full \" src={(urlFor(image).width(250).url())} alt=\"user-post\" />)}\r\n        {postHovered && (\r\n          <div\r\n            className=\"absolute top-0 w-full h-full flex flex-col justify-between p-1 pr-2 pt-2 pb-2 z-50\"\r\n            style={{ height: '100%' }}\r\n          >\r\n            <div className=\"flex items-center justify-between\">\r\n\r\n              {alreadySaved?.length !== 0 ? (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    Unsave(_id);\r\n                  }}\r\n                  className=\"bg-nOrange opacity-70 hover:opacity-100 text-white font-bold px-5 py-1 text-base rounded-3xl hover:shadow-md outline-none\"\r\n                >\r\n                  Unsave\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    savePin(_id);\r\n                  }}\r\n                  type=\"button\"\r\n                  className=\"bg-nOrange opacity-70 hover:opacity-100 text-white font-bold px-5 py-1 text-base rounded-3xl hover:shadow-md outline-none\"\r\n                >\r\n                  {savingPost ? 'Saving' : 'Save'}\r\n                </button>\r\n              )}\r\n\r\n              {postedBy?._id === user?.sub && (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    deletePin(_id);\r\n                  }}\r\n                  className=\"bg-white p-2 rounded-full w-8 h-8 flex items-center justify-center text-dark opacity-75 hover:opacity-100 outline-none\"\r\n                >\r\n                  <AiTwotoneDelete />\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Link to={`/user-profile/${postedBy?._id}`} className=\"flex gap-2 mt-2 items-center\">\r\n        <img\r\n          className=\"w-8 h-8 rounded-full object-cover\"\r\n          src={postedBy?.image}\r\n          alt=\"user-profile\"\r\n        />\r\n        <p className=\"font-semibold capitalize\">{postedBy?.userName}</p>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\nexport default Pin;\r\n","import React from 'react';\r\nimport Masonry from 'react-masonry-css';\r\nimport Pin from './Pin';\r\n\r\nconst breakpointColumnsObj = {\r\n  default: 4,\r\n  3000: 6,\r\n  2000: 5,\r\n  1200: 3,\r\n  1000: 2,\r\n  500: 1,\r\n};\r\n\r\nconst MasonryLayout = ({ pins }) => (\r\n  <Masonry className=\"flex animate-slide-fwd\" breakpointCols={breakpointColumnsObj}>\r\n    {pins?.map((pin) => <Pin key={pin._id} pin={pin} className=\"w-max\" />)}\r\n  </Masonry>\r\n);\r\n\r\nexport default MasonryLayout;\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nfunction Spinner({ message }) {\r\n  return (\r\n    <div className=\"flex flex-col justify-center items-center w-full h-full\">\r\n      <Loader\r\n        type=\"Watch\"\r\n        color=\"#FF9F1C\"\r\n        height={40}\r\n        width={100}\r\n        className=\"m-5\"\r\n      />\r\n\r\n      <p className=\"text-lg text-center px-2\">{message}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { client } from '../client';\r\nimport { feedQuery, searchQuery,  } from '../utils/data';\r\nimport MasonryLayout from './MasonryLayout';\r\nimport Spinner from './Spinner';\r\n\r\nconst Feed = () => {\r\n  const [pins, setPins] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const { categoryId } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (categoryId) {\r\n      setLoading(true);\r\n      const query = searchQuery(categoryId);\r\n      client.fetch(query).then((data) => {\r\n        setPins(data);\r\n        setLoading(false);\r\n      });\r\n    } else {\r\n      setLoading(true);\r\n\r\n      client.fetch(feedQuery).then((data) => {\r\n        setPins(data);\r\n        setLoading(false);\r\n      });\r\n    }\r\n  }, [categoryId]);\r\n  const ideaName = categoryId || 'new';\r\n  if (loading) {\r\n    return (\r\n      <Spinner message={`We are adding ${ideaName} recipes to your feed!`} />\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      {pins && (\r\n        <MasonryLayout pins={pins} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Feed;\r\n","/* eslint-disable no-shadow */\r\n/* eslint-disable react/button-has-type */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { AiTwotoneDelete, AiOutlineHeart, AiFillHeart } from \"react-icons/ai\";\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { client, urlFor } from \"../client\";\r\nimport MasonryLayout from \"./MasonryLayout\";\r\nimport {\r\n  pinDetailMorePinQuery,\r\n  pinDetailQuery,\r\n  ingredientBaseValue,\r\n  fetchIngredientValue,\r\n} from \"../utils/data\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nconst PinDetail = ({ user }) => {\r\n  const { pinId } = useParams();\r\n  const [pins, setPins] = useState();\r\n  const [pinDetail, setPinDetail] = useState();\r\n  const [comment, setComment] = useState(\"\");\r\n  const [addingComment, setAddingComment] = useState(false);\r\n  const [savingPost, setSavingPost] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const User =\r\n    localStorage.getItem(\"user\") !== \"undefined\"\r\n      ? JSON.parse(localStorage.getItem(\"user\"))\r\n      : localStorage.clear();\r\n\r\n  let alreadySaved = pinDetail?.save?.filter(\r\n    (item) => item?.postedBy?._id === User?.sub\r\n  );\r\n\r\n  alreadySaved = alreadySaved?.length > 0 ? alreadySaved : [];\r\n\r\n  const fetchPinDetails = () => {\r\n    const query = pinDetailQuery(pinId);\r\n\r\n    if (query) {\r\n      client.fetch(`${query}`).then((data) => {\r\n        setPinDetail(data[0]);\r\n        if (data[0]) {\r\n          const query1 = pinDetailMorePinQuery(data[0]);\r\n          client.fetch(query1).then((res) => {\r\n            setPins(res);\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const deletePin = (id) => {\r\n    client.delete(id).then(() => {\r\n      navigate(\"/\");\r\n    });\r\n  };\r\n\r\n  const savePin = (id) => {\r\n    if (alreadySaved?.length === 0) {\r\n      setSavingPost(true);\r\n      client\r\n        .patch(id)\r\n        .setIfMissing({ save: [] })\r\n        .insert(\"after\", \"save[-1]\", [\r\n          {\r\n            _key: uuidv4(),\r\n            userId: User?.sub,\r\n            postedBy: {\r\n              _type: \"postedBy\",\r\n              _ref: User?.sub,\r\n            },\r\n          },\r\n        ])\r\n        .commit()\r\n        .then(() => {\r\n          setSavingPost(false);\r\n          fetchPinDetails();\r\n        });\r\n    }\r\n  };\r\n\r\n  // unsave a post\r\n  const Unsave = (id) => {\r\n    const ToRemove = [`save[userId==\"${User.sub}\"]`];\r\n    client\r\n      .patch(id)\r\n      .unset(ToRemove)\r\n      .commit()\r\n      .then(() => {\r\n        setSavingPost(false);\r\n        fetchPinDetails();\r\n      });\r\n  };\r\n\r\n  const deleteComment = (id) => {\r\n    const ToRemove = [`comments[comment==\"${id}\"]`];\r\n    client\r\n      .patch(pinId)\r\n      .unset(ToRemove)\r\n      .commit()\r\n      .then(() => {\r\n        fetchPinDetails();\r\n        setComment(\"\");\r\n        setAddingComment(false);\r\n      });\r\n    // window.location.reload();\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPinDetails();\r\n  }, [pinId]);\r\n\r\n  const addComment = () => {\r\n    if (comment) {\r\n      setAddingComment(true);\r\n\r\n      client\r\n        .patch(pinId)\r\n        .setIfMissing({ comments: [] })\r\n        .insert(\"after\", \"comments[-1]\", [\r\n          {\r\n            comment,\r\n            _key: uuidv4(),\r\n            postedBy: { _type: \"postedBy\", _ref: user._id },\r\n          },\r\n        ])\r\n        .commit()\r\n        .then(() => {\r\n          fetchPinDetails();\r\n          setComment(\"\");\r\n          setAddingComment(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  if (!pinDetail) {\r\n    return <Spinner message=\"Loading Recipe\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {pinDetail && (\r\n        <div\r\n          className=\"flex xl:flex-row flex-col m-auto bg-white w-full border rounded-lg \"\r\n        >\r\n          \r\n          <div className=\"flex justify-center items-center md:items-start flex-initial \">\r\n            <img\r\n              className=\"rounded-t-3xl rounded-b-lg px-10 py-10\"\r\n              src={pinDetail?.image && urlFor(pinDetail?.image).url()}\r\n              alt=\"user-post\"\r\n            />\r\n          </div>\r\n          \r\n          <div className=\"w-full p-5 flex-1 xl:min-w-620 \">\r\n            {alreadySaved?.length !== 0 ? (\r\n              <button\r\n                type=\"button\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  Unsave(pinDetail._id);\r\n                }}\r\n                className=\" mt-5 bg-nOrange opacity-70 hover:opacity-100 text-white font-bold px-5 py-1 text-base rounded-3xl hover:shadow-md outline-none\"\r\n              >\r\n                <AiFillHeart />\r\n              </button>\r\n            ) : (\r\n              <button\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  savePin(pinDetail._id);\r\n                }}\r\n                type=\"button\"\r\n                className=\"mt-5 bg-gray-400 opacity-70 hover:opacity-100 text-white font-bold px-5 py-1 text-base rounded-3xl hover:shadow-md outline-none\"\r\n              >\r\n                <AiOutlineHeart />\r\n              </button>\r\n            )}\r\n\r\n            {pinDetail.postedBy?._id === User.sub && (\r\n              <button\r\n                type=\"button\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  deletePin(pinDetail._id);\r\n                  navigate(\"/home\");\r\n                }}\r\n                className=\"bg-white p-2 rounded-full w-8 h-8 flex items-center justify-center text-dark opacity-75 hover:opacity-100 outline-none\"\r\n              >\r\n                <AiTwotoneDelete />\r\n              </button>\r\n            )}\r\n            <div >\r\n              <div>\r\n                <h1 className=\"text-4xl font-bold break-words mt-3 uppercase\">\r\n                  {pinDetail.title}\r\n                </h1>\r\n              </div>\r\n              <p className=\"mt-3 py-4 capitalize font-semibold\">\r\n                {pinDetail.about}\r\n              </p>\r\n              {/* border for ingre */}\r\n              <div className=\"flex justify-left items-left flex-col border bg-gray-100\">\r\n                \r\n                  \r\n                    <p \r\n                      className=\"font-bold ml-2.5 \">\r\n                      {\" \"}Ingredients:{\" \"}\r\n                    </p>\r\n\r\n                    {pinDetail?.ingredientListPost.map((info) => {\r\n                      return (\r\n                        <div key={info?._key} className=\"float-root flex ml-2.5\">\r\n                         \r\n                         \r\n                            <li className=\"float-left py-4 capitalize flex flex-nowrap\">{info.ingredientName}</li>\r\n                            <li className=\"float-middle mx-3 pt-4 flex flex-nowrap \">{info.amount}</li>                     \r\n                            <li className=\"float-middle pt-4 flex flex-nowrap\">{info.metric}</li>\r\n                         \r\n                        </div>\r\n                      );\r\n                    })}\r\n                  \r\n                \r\n                <p  className=\"font-semibold mb-1 ml-2.5\">\r\n                  {\" \"}\r\n                  Procedure:{\" \"}\r\n                </p>\r\n                {pinDetail.procedure.map((item, i) => (\r\n                  <div\r\n                    className=\"ml-2.5\"\r\n                    key={i}\r\n                  >\r\n                    <li className=\"capitalize\" key={i}>\r\n                      {item}\r\n                    </li>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"p-1 mt-3 border-2 border-black font-sans w-full\">\r\n                <div className=\"text-4xl font-extrabold leading-none\">\r\n                  Nutrition Facts\r\n                </div>\r\n\r\n                <div className=\"flex justify-between font-bold border-b-8 border-black\"></div>\r\n                <div className=\"flex justify-between items-end font-extrabold\">\r\n                  <div>\r\n                    \r\n                    <div className=\"text-4xl\">Calories </div>\r\n                  </div>\r\n                  <div className=\"text-5xl\">\r\n                    {pinDetail?.nutritionPost?.calories}g\r\n                  </div>\r\n                </div>\r\n                <div className=\"border-t-4 border-black text-sm pb-1\">\r\n                  <hr className=\"border-gray-500\" />\r\n                  <div className=\"flex justify-between\">\r\n                    <div>\r\n                      <span className=\"font-bold \">Total Fat </span>\r\n                      {pinDetail?.nutritionPost?.totalfat} g\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"border-gray-500\" />\r\n                  <div className=\"flex justify-between\">\r\n                    <div>\r\n                      {\" \"}\r\n                      <span> Saturated Fat </span>\r\n                      {pinDetail?.nutritionPost?.saturatedfat} g\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"border-gray-500\" />\r\n                  <div>\r\n                    <span className=\"italic\">Trans Fat </span>\r\n                    {pinDetail?.nutritionPost?.transfat} g\r\n                  </div>\r\n                  <hr className=\"border-gray-500\" />\r\n                  <div className=\"flex justify-between\">\r\n                    <div>\r\n                      <span className=\"font-bold\">Cholesterol </span>\r\n                      {pinDetail?.nutritionPost?.cholesterol} mg\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"border-gray-500\" />\r\n                  <div className=\"flex justify-between\">\r\n                    <div>\r\n                      <span className=\"font-bold\">Sodium </span>\r\n                      {pinDetail?.nutritionPost?.sodium} mg\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"border-gray-500\" />\r\n                  <div className=\"flex justify-between\">\r\n                    <div>\r\n                      <span className=\"font-bold\">Total Carbohydrate </span>\r\n                      {pinDetail?.nutritionPost?.totalcarb} g\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"border-gray-500\" />\r\n                  <div className=\"flex justify-between\">\r\n                    <div className=\"pl-4\">\r\n                      Dietary Fiber {pinDetail?.nutritionPost?.dietaryFiber} g\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"border-gray-500\" />\r\n                  <div className=\"pl-4\">\r\n                    Total Sugar {pinDetail?.nutritionPost?.sugar} g\r\n                    <div className=\"pl-4\">\r\n                      <hr className=\"border-gray-500\" />\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"border-gray-500\" />\r\n                  <div>\r\n                    <span className=\"font-bold\">Protein </span>\r\n                    {pinDetail?.nutritionPost?.protein} g\r\n                  </div>\r\n                </div>\r\n                <div className=\"border-t-8 border-black pt-1 text-sm\">\r\n                  <div className=\"flex justify-between\">\r\n                    <div>\r\n                      Vitamin A {pinDetail?.nutritionPost?.vitaminA} mcg\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"border-gray-500\" />\r\n                  <div className=\"flex justify-between\">\r\n                    <div>\r\n                      Vitamin C {pinDetail?.nutritionPost?.vitaminC} mcg\r\n                    </div>\r\n                  </div>\r\n                  <hr className=\"border-gray-500\" />\r\n                  <div className=\"flex justify-between\">\r\n                    <div>Calcium {pinDetail?.nutritionPost?.calcium} mcg</div>\r\n                  </div>\r\n                  <hr className=\"border-gray-500\" />\r\n                  <div className=\"flex justify-between\">\r\n                    <div>Iron {pinDetail?.nutritionPost?.iron} mg</div>\r\n                  </div>\r\n                  <div className=\"border-t-4 border-black flex leading-none text-xs pt-2 pb-1\">\r\n                    <div className=\"pr-1\">*</div>\r\n                    <div>\r\n                    This nutrient fact estimation is based on System's nutrition database.\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Link\r\n              to={`/user-profile/${pinDetail?.postedBy._id}`}\r\n              className=\"flex gap-2 mt-5 items-center bg-white rounded-lg \"\r\n            >\r\n              <img\r\n                src={pinDetail?.postedBy.image}\r\n                className=\"w-10 h-10 rounded-full\"\r\n                alt=\"user-profile\"\r\n              />\r\n              <p className=\"font-semibold capitalize\">\r\n                {pinDetail.postedBy?.userName}\r\n              </p>\r\n            </Link>\r\n            <h2 className=\"mt-5 text-2xl\"> Comments </h2>\r\n            <div className=\"max-h-370 overflow-y-auto h-40 \">\r\n              {pinDetail?.comments?.map((comment, i) => (\r\n                <div\r\n                  className=\"flex gap-2 mt-5 items-center bg-white rounded-lg  \"\r\n                  key={i}\r\n                >\r\n                  <Link to={`/user-profile/${comment?.postedBy._id}`}>\r\n                    <img\r\n                      src={comment.postedBy?.image}\r\n                      alt=\"user-profile\"\r\n                      className=\"pointer-events-none w-10 h-10 rounded-full cursor-pointer \"\r\n                    />\r\n                  </Link>\r\n                  <div className=\"flex flex-col \">\r\n                    <p className=\"font-bold\">{comment.postedBy?.userName}</p>\r\n                    <p className=\"flex break-all\">{comment.comment}</p>\r\n                  </div>\r\n                  <div className=\"flex flex-col mt-4\">\r\n                    {comment?.postedBy?._id === user._id ? (\r\n                      <button\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          deleteComment(comment?.comment);\r\n                        }}\r\n                        className=\"bg-white p-2 rounded-full w-8 h-8 flex items-center justify-center text-dark opacity-75 hover:opacity-100 outline-none\"\r\n                      >\r\n                        <ReactTooltip />\r\n                        <p data-tip=\"Delete Comment\">\r\n                          <AiTwotoneDelete />\r\n                        </p>\r\n                      </button>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"flex flex-wrap mt-6 gap-3\">\r\n              <Link to={`/user-profile/${user._id}`}>\r\n                <img\r\n                  src={user.image}\r\n                  className=\"w-10 h-10 rounded-full cursor-pointer\"\r\n                  alt=\"user-profile\"\r\n                />\r\n              </Link>\r\n              <input\r\n                className=\" flex-1 border-gray-100 outline-none border-2 p-2 rounded-2xl focus:border-gray-300\"\r\n                type=\"text\"\r\n                placeholder=\"Add a comment\"\r\n                value={comment}\r\n                onChange={(e) => setComment(e.target.value)}\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                className=\"bg-nOrange text-white rounded-full px-6 py-2 font-semibold text-base outline-none\"\r\n                onClick={addComment}\r\n              >\r\n                {addingComment ? \"Posting...\" : \"Post\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {pins?.length > 0 && (\r\n        <h2 className=\"text-center font-bold text-2xl mt-8 mb-4\">\r\n          More like this\r\n        </h2>\r\n      )}\r\n      {pins ? (\r\n        <MasonryLayout pins={pins} />\r\n      ) : (\r\n        <Spinner message=\"Loading more pins\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PinDetail;\r\n","/* eslint-disable no-shadow */\r\n/* eslint-disable react/jsx-no-useless-fragment */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { AiOutlineLogout } from 'react-icons/ai';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { googleLogout } from '@react-oauth/google';\r\nimport { userCreatedPinsQuery, userQuery, userSavedPinsQuery /* userfollowers, userfollowing*/ } from '../utils/data';\r\nimport { client } from '../client';\r\nimport MasonryLayout from './MasonryLayout';\r\nimport Spinner from './Spinner';\r\nimport { fetchUser } from '../utils/fetchUser';\r\n\r\nconst activeBtnStyles = 'bg-nGreen text-white font-bold p-2 rounded-full w-20 outline-none';\r\nconst notActiveBtnStyles = 'bg-primary mr-4 text-black font-bold p-2 rounded-full w-20 outline-none';\r\n\r\nconst UserProfile = () => {\r\n  const [user, setUser] = useState();\r\n  const [pins, setPins] = useState();\r\n  const [lengths, setLengths] = useState();\r\n  const [alreadyfollowed, setAlreadyFollowed] = useState(false);\r\n  const [following, setFollowing] = useState();\r\n  const [text, setText] = useState('Created');\r\n  const [activeBtn, setActiveBtn] = useState('created');\r\n  const navigate = useNavigate();\r\n  const { userId } = useParams();\r\n  const users = fetchUser();\r\n\r\n  // const create = (id) => {\r\n  //   client\r\n  //     .patch(id)\r\n  //     .setIfMissing({ follow: [] })\r\n  //     .insert('after', 'follow[-1]', [{\r\n  //       _key: users.sub,\r\n  //       userId: users.sub,\r\n  //       postedBy: {\r\n  //         _type: 'postedBy',\r\n  //         _ref: users.sub,\r\n  //       }\r\n  //     }])\r\n  //     .commit()\r\n  //     .then(() => {\r\n  //       setAlreadyFollowed(true);\r\n  //       fetchFollower();\r\n  //       fetchfollowing();\r\n  //     });\r\n  // };\r\n\r\n  // const fetchfollowing = () => {\r\n  //   const followers = userfollowers(userId);\r\n  //   client.fetch(followers).then((data) => {\r\n  //     setLengths(data[0]?.follow);\r\n  //     if ((data[0]?.follow?.filter((item) => item?.postedBy?._id === users?.sub))?.length > 0) {\r\n  //       setAlreadyFollowed(true);\r\n  //     }\r\n  //   });\r\n  // };\r\n\r\n  // const fetchFollower = () => {\r\n  //   client.fetch(userfollowing).then((data) => {\r\n  //     const index = (data?.map((index) => (\r\n  //       index?.follow?.map((index) => index?.postedBy?._id === userId)\r\n  //     )));\r\n\r\n  //     const index2 = (index?.map((value) => (\r\n  //       value?.filter((Boolean))\r\n  //     )));\r\n\r\n  //     const index3 = (index2?.filter(Boolean).map((index) => index?.length).filter(Number));\r\n\r\n  //     setFollowing(index3);\r\n  //   });\r\n  // };\r\n\r\n  // const unfollow = (id) => {\r\n  //   const ToRemove = [`follow[userId==\"${users.sub}\"]`];\r\n  //   client\r\n  //     .patch(id)\r\n  //     .unset(ToRemove)\r\n  //     .commit()\r\n  //     .then(() => {\r\n  //       window.location.reload();\r\n  //     });\r\n  // };\r\n\r\n  useEffect(() => {\r\n    const query = userQuery(userId);\r\n    client.fetch(query).then((data) => {\r\n      setUser(data[0]);\r\n    });\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    if (text === 'Created') {\r\n      const createdPinsQuery = userCreatedPinsQuery(userId);\r\n      client.fetch(createdPinsQuery)\r\n      .then((data) => {\r\n       setPins(data);\r\n      });\r\n    } \r\n    else {\r\n      const savedPinsQuery = userSavedPinsQuery(userId);\r\n\r\n      client.fetch(savedPinsQuery)\r\n      .then((data) => {\r\n       setPins(data);\r\n      });\r\n    }\r\n  }, [text, userId]);\r\n\r\n  // useEffect(() => {\r\n  //   fetchfollowing();\r\n  // }, [userId]);\r\n\r\n  // useEffect(() => {\r\n  //   fetchFollower();\r\n  // }, [userId]);\r\n\r\n  if (!user) {\r\n    return <Spinner message=\"Loading Profile....\" />;\r\n  }\r\n\r\n  // const alerts = () => {\r\n  //   navigate(`/user-profile/${userId}/following`);\r\n  // };\r\n\r\n  const image = 'https://source.unsplash.com/1600x900/?philippines-food';\r\n\r\n  return (\r\n    <div className=\"relative pb-2 h-full justify-center items-center\">\r\n      <div className=\"flex flex-col pb-5\">\r\n        <div className=\"relative flex flex-col mb-7\">\r\n          <div className=\"flex flex-col justify-center items-center\">\r\n            <img\r\n              className=\"pointer-events-none w-full h-370 2xl:h-510 shadow-lg object-cover\"\r\n              src={image}\r\n              alt=\"banner\"\r\n            />\r\n            <img\r\n              className=\"rounded-full pointer-events-none w-20 h-20 -mt-10 shadow-xl object-cover\"\r\n              src={user.image}\r\n              alt=\"user\"\r\n            />\r\n            <h1 className=\"font-bold text-3xl text-center mt-3\">\r\n              {user.userName}\r\n            </h1>\r\n            <div className=\"absolute top-0 z-1 right-0 p-2\">\r\n              {userId === users.sub && (\r\n               <button\r\n               type=\"button\"\r\n               className=\"bg-white p-2 rounded-full cursor-pointer outline-none shadow-md\"\r\n               onClick={() => {\r\n                 googleLogout();\r\n                 localStorage.clear();\r\n                 navigate('/login');\r\n               }}\r\n             >\r\n               <AiOutlineLogout color=\"red\" fontSize={21} />\r\n             </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n{/*          <div className=\"text-center mb-7\">\r\n            \r\n            <button\r\n              type=\"button\"\r\n              className=\" mr-4 text-nGreen font-bold p-1 rounded-full w-24 outline-none \"\r\n              onClick={() => navigate(`/user-profile/${userId}/followers`)}\r\n              \r\n            >\r\n              {lengths?.length || 0} Followers\r\n            </button>\r\n          \r\n            <button\r\n              type=\"button\"\r\n              className=\"mr-4 text-nGreen font-bold p-1 rounded-full w-24 outline-none\"\r\n              onClick={alerts}\r\n             \r\n            >\r\n              {following?.length || 0} Following\r\n            </button>\r\n          </div>\r\n\r\n          {alreadyfollowed ? (\r\n            \r\n            <div className=\"text-center mb-7\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  unfollow(userId);\r\n                }}\r\n                className=\"bg-nGreen text-white font-bold p-2 rounded-full w-30 outline-none \"\r\n               \r\n              >\r\n                Following\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              {userId !== users.sub && (\r\n              <div className=\"text-center mb-7\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    create(userId);\r\n                  }}\r\n                  className=\"bg-gray-400 text-white font-bold p-2 rounded-full w-30 outline-none \"\r\n                >\r\n                  Follow\r\n                </button>\r\n              </div>\r\n              )}\r\n            </>\r\n          )}\r\n                */}\r\n          <div className=\"text-center mb-7\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={(e) => {\r\n                setText(e.target.textContent);\r\n                setActiveBtn('created');\r\n              }}\r\n              className={`${activeBtn === 'created' ? activeBtnStyles : notActiveBtnStyles}`}\r\n              \r\n            >\r\n              Created\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={(e) => {\r\n                setText(e.target.textContent);\r\n                setActiveBtn('saved');\r\n              }}\r\n              className={`${activeBtn === 'saved' ? activeBtnStyles : notActiveBtnStyles}`}\r\n            >\r\n              Saved\r\n            </button>\r\n          </div>\r\n\r\n          {pins?.length ? (\r\n            <div className=\"px-2\">\r\n              <MasonryLayout pins={pins} />\r\n            </div>\r\n          ) : (\r\n            <div className=\"flex justify-center font-bold items-center w-full text-1xl mt-2\">\r\n              No Pins found!\r\n            </div>\r\n          )}\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","export const fetchUser = () => {\r\n  const user = localStorage.getItem('user') !== 'undefined' ? JSON.parse(localStorage.getItem('user')) : localStorage.clear();\r\n\r\n  return user;\r\n};\r\n","/* eslint-disable max-len */\r\n/* eslint-disable jsx-a11y/label-has-associated-control */\r\n/* eslint-disable react/button-has-type */\r\n/* eslint-disable react/jsx-no-duplicate-props */\r\n/* eslint-disable no-alert, no-console */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { AiOutlineCloudUpload } from \"react-icons/ai\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { ingval, metrics, searchChosenIngredientQuery } from \"../utils/data\";\r\nimport { client } from \"../client\";\r\nimport { categories, fakeDataIng } from \"../utils/data\";\r\nimport Spinner from \"./Spinner\";\r\n\r\nconst CreatePin = ({ user }) => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [about, setAbout] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [loadingIngredient, setLoadingIngredient] = useState(false);\r\n  const [fields, setFields] = useState();\r\n  const [ingredientFields, setIngredientFields] = useState();\r\n  const [nonIngredientFields, setNonIngredientFields] = useState(false);\r\n  const [category, setCategory] = useState();\r\n  const [imageAsset, setImageAsset] = useState();\r\n  const [wrongImageType, setWrongImageType] = useState(false);\r\n  const [procedure, setProcedure] = useState([]);\r\n  const [ModalOpen, setModalOpen] = useState(false);\r\n  const [nonIngredient, setNonIngredient] = useState(false);\r\n\r\n  const [dropdownClick, setDropdownClick] = useState(true);\r\n\r\n  //Ingredient Label For Users\r\n  const [chosenIngredient, setChosenIngredient] = useState(\"\");\r\n  const [nonChosenIngredient, setNonChosenIngredient] = useState(\"\");\r\n  const [nonChosenMetric, setNonChosenMetric] = useState(\"\");\r\n  const [nonChosenAmount, setNonChosenAmount] = useState(\"\");\r\n  //Full Ingredient Object storage after search -- TEMPORARY STORAGE\r\n  const [chosenIngredientObject, setchosenIngredientObject] = useState();\r\n  const [ingredientDropDown, setIngredientDropDown] = useState([]);\r\n  const [chosenMetric, setChosenMetric] = useState();\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [finalRecipeObject, setFinalRecipeObject] = useState([]);\r\n  const [nutrientTable, setNutrientTable] = useState([]);\r\n\r\n  const ModalHandlerOpen = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const ModalHandlerClose = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  //INGREDIENT SEARCH == SHOW DROPDOWN\r\n  useEffect(() => {\r\n    if (chosenIngredient !== \"\") {\r\n      setLoadingIngredient(true);\r\n      const query = searchChosenIngredientQuery(chosenIngredient.toLowerCase());\r\n      client.fetch(query).then((data) => {\r\n        //CHECK FOR DROPDOWN CLICK REMOVES DOUBLE DROPDOWN SHOWING\r\n        if (dropdownClick) {\r\n          setIngredientDropDown(data);\r\n          setChosenMetric(\"\");\r\n          setLoadingIngredient(false);\r\n        } else {\r\n          setIngredientDropDown([]);\r\n          setChosenMetric(\"\");\r\n          setLoadingIngredient(false);\r\n        }\r\n      });\r\n      //RESET EVERYTHING IF TEXTBOX IS EMPTY\r\n    } else {\r\n      setIngredientDropDown([]);\r\n      setChosenMetric(\"\");\r\n      setLoadingIngredient(false);\r\n    }\r\n  }, [chosenIngredient]);\r\n\r\n  // CHANGE INGREDIENT WHEN DROPDOWN IS CLICKED && RESET DROPDOWNSTATE\r\n  const ChooseIngredientHandler = (a) => {\r\n    setChosenIngredient(a.ingAdminName);\r\n    setchosenIngredientObject(a);\r\n    setIngredientDropDown([]);\r\n  };\r\n\r\n  // Handlers when to Open And Close Dropdown when selected -- AVOIDS DOUBLE SEARCHING DROPDOWN\r\n  const dropdownClickHandlerOpen = () => {\r\n    setDropdownClick(true);\r\n  };\r\n  const dropdownClickHandlerClose = () => {\r\n    setDropdownClick(false);\r\n  };\r\n\r\n  const nonIngredientHandler = () => {\r\n    setNonIngredient(true);\r\n  };\r\n\r\n  const nonIngredientHandlerClose = () => {\r\n    setNonIngredient(false);\r\n  };\r\n  //SAVE NON INGREDIENTS TO LIST NO NUTRIENT VALUE\r\n  const nonIngredientConfirm = () => {\r\n    if (nonChosenIngredient && nonChosenMetric && nonChosenAmount) {\r\n      const doc = {\r\n        ingredientName: nonChosenIngredient,\r\n        metric: nonChosenMetric,\r\n        amount: parseInt(nonChosenAmount),\r\n        calories: 0,\r\n        totalfat: 0,\r\n        saturatedfat: 0,\r\n        transfat: 0,\r\n        cholesterol: 0,\r\n        sodium: 0,\r\n        totalcarb: 0,\r\n        dietaryFiber: 0,\r\n        sugar: 0,\r\n        protein: 0,\r\n        vitaminA: 0,\r\n        vitaminC: 0,\r\n        calcium: 0,\r\n        iron: 0,\r\n      };\r\n\r\n      const newArray = [...finalRecipeObject, doc];\r\n      setFinalRecipeObject(newArray);\r\n\r\n      setNonChosenIngredient(\"\");\r\n      setNonChosenMetric(\"\");\r\n      setNonChosenAmount(\"\");\r\n      setIngredientDropDown([]);\r\n      setNonIngredient(false);\r\n    } else {\r\n      setNonIngredientFields(true);\r\n\r\n      setTimeout(() => {\r\n        setNonIngredientFields(false);\r\n      }, 4000);\r\n    }\r\n  };\r\n\r\n  //Handler For Ingredient List Button -- MAIN STORAGE OF FULL INGREDIENT OBJECT -- USES PUSH AND MAKES ARRAY OF OBJECTS TO BE MANIPULATED FOR FINAL RESULT\r\n\r\n  const handleIngredientList = () => {\r\n    if (\r\n      chosenIngredient &&\r\n      chosenMetric &&\r\n      chosenMetric !== null &&\r\n      chosenIngredientObject &&\r\n      amount\r\n    ) {\r\n      var item = chosenIngredientObject?.baseSize.find(\r\n        (item) => item?.baseSizeNum == chosenMetric\r\n      );\r\n\r\n      console.log(item);\r\n\r\n      const doc = {\r\n        ingredientName: chosenIngredientObject.ingAdminName,\r\n        metric: chosenMetric,\r\n        amount: parseInt(amount),\r\n        calories: item.calories * amount,\r\n        totalfat: item.totalfat * amount,\r\n        saturatedfat: item.saturatedfat * amount,\r\n        transfat: item.transfat * amount,\r\n        cholesterol: item.cholesterol * amount,\r\n        sodium: item.sodium * amount,\r\n        totalcarb: item.totalcarb * amount,\r\n        dietaryFiber: item.dietaryFiber * amount,\r\n        sugar: item.sugar * amount,\r\n        protein: item.protein * amount,\r\n        vitaminA: item.vitaminA * amount,\r\n        vitaminC: item.vitaminC * amount,\r\n        calcium: item.calcium * amount,\r\n        iron: item.iron * amount,\r\n        _key: item._key,\r\n      };\r\n\r\n      const newArray = [...finalRecipeObject, doc];\r\n      setFinalRecipeObject(newArray);\r\n\r\n      setChosenIngredient(\"\");\r\n      setchosenIngredientObject();\r\n      setChosenMetric(\"\");\r\n      setIngredientDropDown([]);\r\n      setAmount(\"\");\r\n    } else {\r\n      setIngredientFields(true);\r\n\r\n      setTimeout(() => {\r\n        setIngredientFields(false);\r\n      }, 4000);\r\n    }\r\n  };\r\n\r\n  // USE EFFECT FOR CONSTANT RECALCULATION FOR SUM OF ALL NUTRIENTS IN THE FinalRecipeObject\r\n  // NUTRIENT TABLE = SUM OF ALL NUTRIENTS IN FINAL RECIPE OBJECT\r\n  useEffect(() => {\r\n    if (finalRecipeObject.length !== 0) {\r\n      var add = finalRecipeObject.reduce(function (\r\n        previousValue,\r\n        currentValue\r\n      ) {\r\n        return {\r\n          calories: previousValue.calories + currentValue.calories,\r\n          totalfat: previousValue.totalfat + currentValue.totalfat,\r\n          saturatedfat: previousValue.saturatedfat + currentValue.saturatedfat,\r\n          transfat: previousValue.transfat + currentValue.transfat,\r\n          cholesterol: previousValue.cholesterol + currentValue.cholesterol,\r\n          sodium: previousValue.sodium + currentValue.sodium,\r\n          totalcarb: previousValue.totalcarb + currentValue.totalcarb,\r\n          dietaryFiber: previousValue.dietaryFiber + currentValue.dietaryFiber,\r\n          sugar: previousValue.sugar + currentValue.sugar,\r\n          protein: previousValue.protein + currentValue.protein,\r\n          vitaminA: previousValue.vitaminA + currentValue.vitaminA,\r\n          vitaminC: previousValue.vitaminC + currentValue.vitaminC,\r\n          calcium: previousValue.calcium + currentValue.calcium,\r\n          iron: previousValue.iron + currentValue.iron,\r\n        };\r\n      });\r\n\r\n      setNutrientTable(add);\r\n    }\r\n  }, [finalRecipeObject]);\r\n\r\n  const deleteFinalRecipeObjectHandler = (i) => {\r\n    let newDataArr = [...finalRecipeObject];\r\n    newDataArr.splice(i, 1);\r\n    setFinalRecipeObject(newDataArr);\r\n  };\r\n\r\n  // handle procedure\r\n\r\n  const handleProcedureAdd = () => {\r\n    const qwe = [...procedure, []];\r\n    setProcedure(qwe);\r\n  };\r\n  const handleProcedureChange = (onChangeValue, u) => {\r\n    const inputdata = [...procedure];\r\n    inputdata[u] = onChangeValue.target.value;\r\n    setProcedure(inputdata);\r\n  };\r\n  const handleProcedureDelete = (u) => {\r\n    const deleteProcedure = [...procedure];\r\n    deleteProcedure.splice(u, 1);\r\n    setProcedure(deleteProcedure);\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const uploadImage = (e) => {\r\n    const selectedFile = e.target.files[0];\r\n    // uploading asset to sanity\r\n    if (\r\n      selectedFile.type === \"image/png\" ||\r\n      selectedFile.type === \"image/svg\" ||\r\n      selectedFile.type === \"image/jpeg\" ||\r\n      selectedFile.type === \"image/gif\" ||\r\n      selectedFile.type === \"image/tiff\"\r\n    ) {\r\n      setWrongImageType(false);\r\n      setLoading(true);\r\n      client.assets\r\n        .upload(\"image\", selectedFile, {\r\n          contentType: selectedFile.type,\r\n          filename: selectedFile.name,\r\n        })\r\n        .then((document) => {\r\n          setImageAsset(document);\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Upload failed:\", error.message);\r\n        });\r\n    } else {\r\n      setLoading(false);\r\n      setWrongImageType(true);\r\n    }\r\n  };\r\n\r\n  const savePin = () => {\r\n    if (\r\n      title &&\r\n      about &&\r\n      procedure &&\r\n      imageAsset?._id &&\r\n      category &&\r\n      finalRecipeObject\r\n    ) {\r\n      const doc = {\r\n        _type: \"pin\",\r\n        _key: uuidv4(),\r\n        title,\r\n        about,\r\n        procedure,\r\n        image: {\r\n          _type: \"image\",\r\n          asset: {\r\n            _type: \"reference\",\r\n            _ref: imageAsset?._id,\r\n          },\r\n        },\r\n        userId: user._id,\r\n        postedBy: {\r\n          _type: \"postedBy\",\r\n          _ref: user._id,\r\n        },\r\n        category,\r\n        ingredientListPost: finalRecipeObject,\r\n        nutritionPost: nutrientTable,\r\n      };\r\n      client.create(doc).then(() => {\r\n        navigate(\"/\");\r\n        console.log(doc);\r\n      });\r\n    } else {\r\n      setFields(true);\r\n\r\n      setTimeout(() => {\r\n        setFields(false);\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col justify-center items-center mt-5 lg:h-4/5\">\r\n      <div className=\" flex lg:flex-row flex-col justify-center items-center bg-white lg:p-5 p-3 lg:w-4/5  w-full\">\r\n        <div className=\"bg-secondaryColor p-3 flex flex-0.7 w-full\">\r\n          <div className=\" flex justify-center items-center flex-col border-2 border-dotted border-blue-400 p-3 w-full h-420\">\r\n            {loading && <Spinner />}\r\n            {wrongImageType && <p>It&apos;s wrong file type.</p>}\r\n            {!imageAsset ? (\r\n              // eslint-disable-next-line jsx-a11y/label-has-associated-control\r\n              <label>\r\n                <div className=\"flex flex-col items-center justify-center h-full\">\r\n                  <div className=\"flex flex-col justify-center items-center\">\r\n                    <p className=\"font-bold text-2xl\">\r\n                      <AiOutlineCloudUpload />\r\n                    </p>\r\n                    <p className=\"text-lg font-semibold\">Click to upload</p>\r\n                  </div>\r\n\r\n                  <p className=\"mt-3 text-gray-400 text-xs\">\r\n                    Recommendation: Use high-quality JPG, JPEG, SVG, PNG, GIF or\r\n                    TIFF less than 20MB\r\n                  </p>\r\n                </div>\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"upload-image\"\r\n                  onChange={uploadImage}\r\n                  className=\"w-0 h-0\"\r\n                />\r\n              </label>\r\n            ) : (\r\n              <div className=\"relative h-full\">\r\n                <img\r\n                  src={imageAsset?.url}\r\n                  alt=\"uploaded-pic\"\r\n                  className=\"h-full w-full\"\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"absolute bottom-3 right-3 p-3 rounded-full bg-white text-xl cursor-pointer outline-none hover:shadow-md transition-all duration-500 ease-in-out\"\r\n                  onClick={() => setImageAsset(null)}\r\n                >\r\n                  <MdDelete />\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex flex-1 flex-col gap-1 lg:pl-5 mt-5 w-full \">\r\n          {user && (\r\n            <div className=\"flex gap-2 mt-2 mb-2 items-center bg-white rounded-lg \">\r\n              <img\r\n                src={user.image}\r\n                className=\"w-10 h-10 rounded-full\"\r\n                alt=\"user-profile\"\r\n              />\r\n              <p className=\"font-bold\">{user.userName}</p>\r\n            </div>\r\n          )}\r\n          <div className=\"flex flex-1 flex-col gap-6  mt-2 w-auto\">\r\n            <input\r\n              type=\"text\"\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              placeholder=\"Give your recipe a title\"\r\n              className=\"outline-none text-xl sm:text-3l font-bold border-b-2 border-gray-200 p-2\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"flex flex-1 flex-col gap-6  mt-5 w-auto\">\r\n            <input\r\n              type=\"text\"\r\n              value={about}\r\n              onChange={(e) => setAbout(e.target.value)}\r\n              placeholder=\"Recipe Description\"\r\n              className=\"outline-none text-base sm:text-lg border-b-2 border-gray-200 \"\r\n            />\r\n          </div>\r\n          <p className=\"font-semibold mt-6\">Add Ingredient to the list: </p>\r\n          <div className=\"h-56 grid  content-evenly w-auto float-root flex items-stretch \">\r\n            {/* NUTRIENT MODULE */}\r\n            {ingredientFields && (\r\n              <p className=\"text-nGreen mr-5 text-medium transition-all duration-150 ease-in \">\r\n                Please add all ingredient fields.\r\n              </p>\r\n            )}\r\n            <div className=\"float-left py-4 bg-gray-200 rounded\">\r\n              <div className=\"flex flex-nowrap flex-1 flex-col gap-6 w-auto \">\r\n                <input\r\n                  type=\"text\"\r\n                  onChange={(e) => {\r\n                    setChosenIngredient(e.target.value);\r\n                    dropdownClickHandlerOpen();\r\n                  }}\r\n                  onBlur={() => dropdownClickHandlerClose()}\r\n                  placeholder=\"Search Ingredient\"\r\n                  value={chosenIngredient}\r\n                  className=\"outline-none text-base sm:text-lg border-b-2 border-gray-200 \"\r\n                />\r\n              </div>\r\n\r\n              {/* DISPLAY ALERT IF NO INGREDIENTS FOUND */}\r\n              <div>\r\n                {ingredientDropDown.length == 0 &&\r\n                  chosenIngredient !== \"\" &&\r\n                  !loadingIngredient &&\r\n                  dropdownClick && (\r\n                    <div className=\"text-xs\">NO INGREDIENTS FOUND</div>\r\n                  )}\r\n\r\n                {/* DISPLAY WHEN LOADING SEARCH INGREDIENTS */}\r\n                {loadingIngredient && <div className=\"text-xs\">LOADING</div>}\r\n\r\n                {/* DROPDOWN BAR FOR INGREDIENT SEARCH */}\r\n                <div className=\"border bg-gray-100\">\r\n                  {ingredientDropDown?.map((item) => (\r\n                    <div\r\n                      onClick={() => {\r\n                        ChooseIngredientHandler(item);\r\n                        dropdownClickHandlerClose();\r\n                      }}\r\n                      key={item?._key}\r\n                    >\r\n                      {item?.ingAdminName}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              {/* amount */}\r\n              {ingredientDropDown.length == 0 && (\r\n                <div className=\"float-left py-4 \">\r\n                  <div className=\" flex flex-nowrap \">\r\n                    {/* <div class=\"flex flex-nowrap\"> */}\r\n                    <input\r\n                      type=\"number\"\r\n                      step=\"1\"\r\n                      min=\"0\"\r\n                      onChange={(e) => setAmount(e.target.value)}\r\n                      placeholder=\"Amount\"\r\n                      value={amount}\r\n                      className=\"  block p-2 w-24 h-9 bg-white outline-none border rounded-lg \"\r\n                    />\r\n                    {/* </div> */}\r\n                    <div>\r\n                      <div className=\"flex flex-nowrap pl-8\">\r\n                        {/* metric */}\r\n\r\n                        <select\r\n                          value={chosenMetric}\r\n                          onChange={(e) => {\r\n                            setChosenMetric(e.target.value);\r\n                          }}\r\n                          className=\" block p-2 w-24 h-9 text-gray-900 bg-gray-50 rounded-lg border border-gray-300 sm:text-xs font-semibold focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n                        >\r\n                          <option\r\n                            className=\"text-base border outline-none capitalize bg-gray-100 text-gray \"\r\n                            value={null}\r\n                            disable\r\n                            selected\r\n                            hidden\r\n                          >\r\n                            metric\r\n                          </option>\r\n                          {chosenIngredientObject?.baseSize.map((item) => (\r\n                            <option\r\n                              className=\"text-base border-0 outline-none capitalize bg-white text-gray \"\r\n                              value={item?.baseSizeNum}\r\n                            >\r\n                              {item?.baseSizeNum}\r\n                            </option>\r\n                          ))}\r\n                        </select>\r\n                        <button\r\n                          className=\"text-nGreen w-24 h-6 float-left py-1 ml-6 mt-2 text-xs font-bold text-center text-white bg-gray-50 rounded-full border border-blue-300\"\r\n                          onClick={() => handleIngredientList()}\r\n                        >\r\n                          ADD\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"float-root\">\r\n              <div className=\"float-left flex flex-nowrap mb-8 \">\r\n                {!nonIngredient && (\r\n                  <button\r\n                    onClick={() => nonIngredientHandler()}\r\n                    className=\"text-nGreen underline underline-offset-1\"\r\n                  >\r\n                    Ingredient not in database? Add without nutrition data.\r\n                  </button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* modal  */}\r\n          {nonIngredient && (\r\n            <div\r\n              className=\"fixed inset-0 bg-black-500 bg-opacity-30 backdrop-blur-md  flex flex-col \r\n    justify-center items-center  \"\r\n            >\r\n              <div className=\"fixed bg-gray-100 rounded-md h-auto w-auto \">\r\n                <div className=\"p-1 border-2 border-black font-sans w-full\">\r\n                  <div className=\"h-auto grid  content-evenly w-auto float-root flex items-stretch \">\r\n                    <p>\r\n                      This Ingredient will not be included in the nutrition fact\r\n                      estimation\r\n                    </p>\r\n\r\n                    {nonIngredientFields && (\r\n                      <p className=\"text-nGreen mr-5 text-medium transition-all duration-150 ease-in \">\r\n                        Please add all ingredient fields.\r\n                      </p>\r\n                    )}\r\n                    <div className=\"float-left py-4 \">\r\n                      <div className=\"flex flex-nowrap flex-1 flex-col gap-6 w-auto \">\r\n                        <input\r\n                          type=\"text\"\r\n                          onChange={(e) => {\r\n                            setNonChosenIngredient(e.target.value);\r\n                          }}\r\n                          placeholder=\"Ingedients\"\r\n                          value={nonChosenIngredient}\r\n                          className=\"outline-none text-base sm:text-lg border-b-2 border-gray-200 \"\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"float-left py-4 \">\r\n                        <div className=\" flex flex-nowrap \">\r\n                          {/* <div class=\"flex flex-nowrap\"> */}\r\n                          <input\r\n                            type=\"number\"\r\n                            step=\"1\"\r\n                            min=\"0\"\r\n                            onChange={(e) => setNonChosenAmount(e.target.value)}\r\n                            placeholder=\"Amount\"\r\n                            value={nonChosenAmount}\r\n                            className=\"  block p-2 w-24 h-9 bg-white outline-none border rounded-lg \"\r\n                          />\r\n                          <div>\r\n                            <div class=\"flex flex-nowrap pl-8\">\r\n                              {/* metric */}\r\n\r\n                              <input\r\n                                type=\"text\"\r\n                                onChange={(e) =>\r\n                                  setNonChosenMetric(e.target.value)\r\n                                }\r\n                                placeholder=\"Metric\"\r\n                                value={nonChosenMetric}\r\n                                className=\" block p-2 w-24 h-9 text-gray-900 bg-gray-50 rounded-lg border border-gray-300 sm:text-xs font-semibold focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500\"\r\n                              />\r\n                              <button\r\n                                className=\"text-nGreen w-24 h-6 float-left py-1 ml-6 mt-2 text-xs font-bold text-center text-white bg-gray-50 rounded-full border border-blue-300\"\r\n                                onClick={() => nonIngredientConfirm()}\r\n                              >\r\n                                ADD\r\n                              </button>\r\n                            </div>{\" \"}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <a\r\n                      href=\"mailto:nutrisipe@gmail.com?subject=Request an ingredient\"\r\n                      className=\"text-nGreen underline underline-offset-1\"\r\n                    >\r\n                      Send Ingredient Email Request Instead?\r\n                    </a>\r\n                    <div className=\"mt-3 pb-4\">\r\n                      <button\r\n                        className=\"ml-2 transition ease-in-out delay-150 w-24 border border-blue-300 rounded-full bg-gray-200  text-gray-400 hover:text-white hover:-translate-y-1 hover:scale-110 hover:bg-nRed duration-300\"\r\n                        onClick={() => nonIngredientHandlerClose()}\r\n                      >\r\n                        close\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"flex justify-left items-left flex-col  w-full \">\r\n            <p className=\"font-semibold\"> Ingredient List: </p>\r\n            {finalRecipeObject.map((info, i) => {\r\n              return (\r\n                <div key={i} className=\"float-root  flex full\">\r\n                  <div className=\" float-left  py-4 \">\r\n                    <div\r\n                      style={{\r\n                        width: \"auto\",\r\n                        height: \"auto\",\r\n                        marginLeft: \"10px\",\r\n                        position: \"relative\",\r\n                      }}\r\n                      className=\"capitalize flex flex-nowrap\"\r\n                    >\r\n                      {info.ingredientName}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"float-middle py-4 \">\r\n                    <div\r\n                      style={{\r\n                        width: \"auto\",\r\n                        height: \"auto\",\r\n                        marginLeft: \"10px\",\r\n                        position: \"relative\",\r\n                      }}\r\n                      className=\" flex flex-nowrap\"\r\n                    >\r\n                      {info.amount}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"float-middle py-4 \">\r\n                    <div\r\n                      style={{\r\n                        width: \"auto\",\r\n                        height: \"auto\",\r\n                        marginLeft: \"10px\",\r\n                        position: \"relative\",\r\n                      }}\r\n                      className=\" flex flex-nowrap\"\r\n                    >\r\n                      {info.metric}\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    className=\" pt-1 text-nRed mx-4  text-xs font-bold text-center  p-1 \"\r\n                    onClick={() => deleteFinalRecipeObjectHandler(i)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              );\r\n            })}{\" \"}\r\n          </div>\r\n\r\n          {ModalOpen && (\r\n            <div\r\n              className=\"fixed inset-0 bg-black bg-opacity-30 backdrop-blur-sm flex flex-col \r\n            justify-center items-center  \"\r\n            >\r\n              <div className=\"fixed bg-gray-100 rounded-md h-auto w-96 \">\r\n                <div className=\"p-1 border-2 border-black font-sans w-full\">\r\n                  <div className=\"text-4xl font-extrabold leading-none\">\r\n                    Nutrition Facts\r\n                  </div>\r\n\r\n                  <div className=\"flex justify-between font-bold border-b-8 border-black\"></div>\r\n                  <div className=\"flex justify-between items-end font-extrabold\">\r\n                    <div>\r\n                      <div className=\"text-4xl\">Calories </div>\r\n                    </div>\r\n                    <div className=\"text-5xl\">{nutrientTable.calories}g</div>\r\n                  </div>\r\n                  <div className=\"border-t-4 border-black text-sm pb-1\">\r\n                    <hr className=\"border-gray-500\" />\r\n                    <div className=\"flex justify-between\">\r\n                      <div>\r\n                        <span className=\"font-bold \">Total Fat </span>\r\n                        {nutrientTable.totalfat} g\r\n                      </div>\r\n                    </div>\r\n                    <hr className=\"border-gray-500\" />\r\n                    <div className=\"flex justify-between\">\r\n                      <div>\r\n                        {\" \"}\r\n                        <span> Saturated Fat </span>\r\n                        {nutrientTable.saturatedfat} g\r\n                      </div>\r\n                    </div>\r\n                    <hr className=\"border-gray-500\" />\r\n                    <div>\r\n                      <span className=\"italic\">Trans Fat </span>\r\n                      {nutrientTable.transfat} g\r\n                    </div>\r\n                    <hr className=\"border-gray-500\" />\r\n                    <div className=\"flex justify-between\">\r\n                      <div>\r\n                        <span className=\"font-bold\">Cholesterol </span>\r\n                        {nutrientTable.cholesterol} mg\r\n                      </div>\r\n                    </div>\r\n                    <hr className=\"border-gray-500\" />\r\n                    <div className=\"flex justify-between\">\r\n                      <div>\r\n                        <span className=\"font-bold\">Sodium </span>\r\n                        {nutrientTable.sodium} mg\r\n                      </div>\r\n                    </div>\r\n                    <hr className=\"border-gray-500\" />\r\n                    <div className=\"flex justify-between\">\r\n                      <div>\r\n                        <span className=\"font-bold\">Total Carbohydrate </span>\r\n                        {nutrientTable.totalcarb} g\r\n                      </div>\r\n                    </div>\r\n                    <hr className=\"border-gray-500\" />\r\n                    <div className=\"flex justify-between\">\r\n                      <div className=\"pl-4\">\r\n                        Dietary Fiber {nutrientTable.dietaryFiber} g\r\n                      </div>\r\n                    </div>\r\n                    <hr className=\"border-gray-500\" />\r\n                    <div className=\"pl-4\">\r\n                      Total Sugar {nutrientTable.sugar} g\r\n                      <div className=\"pl-4\">\r\n                        <hr className=\"border-gray-500\" />\r\n                      </div>\r\n                    </div>\r\n                    <hr className=\"border-gray-500\" />\r\n                    <div>\r\n                      <span className=\"font-bold\">Protein </span>\r\n                      {nutrientTable.protein} g\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"border-t-8 border-black pt-1 text-sm\">\r\n                    <div className=\"flex justify-between\">\r\n                      <div>Vitamin A {nutrientTable.vitaminA} mcg</div>\r\n                    </div>\r\n                    <hr className=\"border-gray-500\" />\r\n                    <div className=\"flex justify-between\">\r\n                      <div>Vitamin C {nutrientTable.vitaminC} mcg</div>\r\n                    </div>\r\n                    <hr className=\"border-gray-500\" />\r\n                    <div className=\"flex justify-between\">\r\n                      <div>Calcium {nutrientTable.calcium} mcg</div>\r\n                    </div>\r\n                    <hr className=\"border-gray-500\" />\r\n                    <div className=\"flex justify-between\">\r\n                      <div>Iron {nutrientTable.iron} mg</div>\r\n                    </div>\r\n                    <div className=\"border-t-4 border-black flex leading-none text-xs pt-2 pb-1\">\r\n                      <div className=\"pr-1\">*</div>\r\n                      <div>\r\n                        This nutrient fact estimation is based on System's nutrition database.\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"mt-3\">\r\n                  <button\r\n                    className=\"ml-2 transition ease-in-out delay-150 w-24 border border-blue-300 rounded-full bg-gray-200  text-gray-400 hover:text-white hover:-translate-y-1 hover:scale-110 hover:bg-nRed duration-300\"\r\n                    onClick={ModalHandlerClose}\r\n                  >\r\n                    close\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {!ModalOpen && (\r\n            <button\r\n              className=\"mt-5 text-white w-24 h-7.5 float-left py-1 px-1  text-xs font-bold text-center text-white bg-nOrange  rounded-full border border-blue-300\"\r\n              onClick={ModalHandlerOpen}\r\n            >\r\n              See Nutrients\r\n            </button>\r\n          )}\r\n\r\n          {/* div for procedures */}\r\n          <div className=\"flex flex-1 flex-col gap-2 mt-2 w-full py-4\">\r\n            <label className=\" font-semibold\">Procedure</label>\r\n            {procedure.map((data, u) => (\r\n              <div className=\"flow-root\">\r\n                {/* textarea for procedures */}\r\n                <textarea\r\n                  key=\"u\"\r\n                  id=\"message\"\r\n                  rows=\"4\"\r\n                  className=\"float-left block w-full h-auto text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 \"\r\n                  placeholder=\"Procedure\"\r\n                  value={data}\r\n                  onChange={(e) => handleProcedureChange(e, u)}\r\n                />\r\n                {/* button for x procedures */}\r\n                <button\r\n                  onClick={() => handleProcedureDelete(u)}\r\n                  className=\"text-nRed w-5 h-5 float-right px-1 mx-1 mt-1 text-xs font-bold text-center text-white bg-gray-50 rounded-lg border border-red-200\"\r\n                >\r\n                  x\r\n                </button>\r\n              </div>\r\n            ))}\r\n            {/* button for add procedures */}\r\n            <button\r\n              className=\"text-nGreen w-24 h-7.5 float-left py-1  text-xs font-bold text-center text-white bg-gray-50 rounded-full border border-blue-300\"\r\n              onClick={() => handleProcedureAdd()}\r\n            >\r\n              ADD\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"flex flex-1 flex-col gap-6 lg:pl-5 mt-5 w-full\">\r\n            <div>\r\n              <p className=\"mb-2 font-semibold text:lg sm:text-xl\">\r\n                Choose Recipe Category\r\n              </p>\r\n              <select\r\n                onChange={(e) => {\r\n                  setCategory(e.target.value);\r\n                }}\r\n                className=\"outline-none w-4/5 text-base border-b-2 border-gray-200 p-2 rounded-md cursor-pointer\"\r\n              >\r\n                <option value=\"others\" className=\"sm:text-bg bg-white\">\r\n                  Select Category\r\n                </option>\r\n                {categories.map((item) => (\r\n                  <option\r\n                    className=\"text-base border-0 outline-none capitalize bg-gray-100 text-black \"\r\n                    value={item.name}\r\n                  >\r\n                    {item.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"flex justify-end items-end mt-5\">\r\n              {fields && (\r\n                <p className=\"text-nGreen mr-5 text-xl transition-all duration-150 ease-in \">\r\n                  Please add all fields.\r\n                </p>\r\n              )}\r\n              <button\r\n                type=\"button\"\r\n                onClick={savePin}\r\n                className=\"transition ease-in-out delay-150 w-36 border border-blue-300 rounded-full bg-nGreen text-white hover:text-white hover:-translate-y-1 hover:scale-110 hover:bg-nOrange duration-300\"\r\n              >\r\n                Upload Recipe\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePin;\r\n","import React, { useEffect, useState } from 'react';\r\nimport MasonryLayout from './MasonryLayout';\r\nimport { client } from '../client';\r\nimport { feedQuery, searchQuery } from '../utils/data';\r\nimport Spinner from './Spinner';\r\n\r\n\r\nconst Search = ({ searchTerm }) => {\r\n  const [pins, setPins] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (searchTerm.length > 3) \r\n    {\r\n      setLoading(true);\r\n      const query = searchQuery(searchTerm.toLowerCase());\r\n      client.fetch(query).then((data) => {\r\n        setPins(data);\r\n        setLoading(false);\r\n      });\r\n    }\r\n     else \r\n     {\r\n      client.fetch(feedQuery)\r\n        .then((data) => {\r\n        setPins(data);\r\n        setLoading(false);\r\n      });\r\n    }\r\n  }, [searchTerm]);\r\n\r\n  return (\r\n    <div>\r\n      {loading && <Spinner message=\"Searching for Recipes..\" />}\r\n      {pins?.length !== 0 && <MasonryLayout pins={pins} />}\r\n      {pins?.length === 0 && searchTerm !== '' && !loading && (\r\n        <div className=\"mt-10 text-center text-xl \">No Recipes Found!</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","export default __webpack_public_path__ + \"static/media/foods.2fe469ec.mp4\";","export default __webpack_public_path__ + \"static/media/logoss.c9193e43.png\";","/* eslint-disable camelcase */\r\nimport React from 'react';\r\nimport { GoogleLogin, GoogleOAuthProvider } from '@react-oauth/google';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport jwt_decode from 'jwt-decode';\r\nimport shareVideo from '../assets/foods.mp4';\r\nimport logo from '../assets/logoss.png';\r\nimport { client } from '../client';\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const responseGoogle = (response) => {\r\n    const userResponse = jwt_decode(response.credential);\r\n\r\n    localStorage.setItem('user', JSON.stringify(userResponse));\r\n    const { name, sub, picture } = userResponse;\r\n\r\n    const doc = {\r\n      _id: sub,\r\n      _type: 'user',\r\n      userName: name,\r\n      image: picture,\r\n      id: sub,\r\n      isAdmin: false\r\n    };\r\n\r\n    client.createIfNotExists(doc).then(() => {\r\n      navigate('/', { replace: true });\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex justify-start items-center flex-col h-screen\">\r\n      <div className=\" relative w-full h-full\">\r\n        <video\r\n          src={shareVideo}\r\n          type=\"video/mp4\"\r\n          loop\r\n          controls={false}\r\n          muted\r\n          autoPlay\r\n          className=\"w-full h-full object-cover\"\r\n        />\r\n\r\n        <div className=\"absolute flex flex-col justify-center items-center top-0 right-0 left-0 bottom-0    bg-blackOverlay\">\r\n          <div className=\"p-5\">\r\n            <img src={logo} width=\"130px\" alt=\"logo\" />\r\n          </div>\r\n\r\n          <GoogleOAuthProvider\r\n            clientId={`${process.env.REACT_APP_GOOGLE_OAUTH_CLIENT_ID}`}\r\n            className=\"shadow-2xl\"\r\n          >\r\n            <GoogleLogin\r\n              onSuccess={responseGoogle}\r\n              onFailure={responseGoogle}\r\n              cookiePolicy=\"single_host_origin\"\r\n            />\r\n          </GoogleOAuthProvider>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { allIngredientsQuery, searchIngredientQuery } from \"../utils/data\";\r\nimport { client } from \"../client\";\r\nimport { AiTwotoneDelete } from 'react-icons/ai';\r\n\r\nconst ReadIngredient = ({uploadSuccessAlert, setuploadSuccessAlert}) => {\r\n  const [ingredientList, setIngredientList] = useState();\r\n  const [searchIngredientTerm, setSearchIngredientTerm] = useState(\"\");\r\n  const [refresher, setRefresher] = useState(0)\r\n  const ingredientFetchHandler = () => {\r\n    client.fetch(allIngredientsQuery).then((data) => {\r\n      setIngredientList(data);\r\n    });\r\n  };\r\n\r\n\r\n  //SEARCH BAR QUERY GETTER\r\n  useEffect(() => {\r\n    if (searchIngredientTerm !== \"\") {\r\n      const query = searchIngredientQuery(searchIngredientTerm.toLowerCase());\r\n      client.fetch(query).then((data) => {\r\n        setIngredientList(data);\r\n        console.log(ingredientList);\r\n      });\r\n    } else {\r\n      client.fetch(allIngredientsQuery).then((data) => {\r\n        setIngredientList(data);\r\n\r\n        console.log(ingredientList);\r\n      });\r\n    }\r\n  }, [searchIngredientTerm, refresher, uploadSuccessAlert, setuploadSuccessAlert]);\r\n\r\n\r\n  const deleteDatabaseIngredient = (key) => {\r\n\r\n    client\r\n      .delete({query: `*[_type == \"ingredientAdmin\" && _key == \"${key}\"]`})\r\n      .then(() => {\r\n        setRefresher(refresher + 1);\r\n\r\n      });\r\n\r\n  };\r\n\r\n\r\n  return (\r\n    //SEARCH BAR\r\n    <div className=\"border-t-8 border-black pt-1 text-sm w-full\">\r\n    <div className=\"flex flex-col justify-center items-center mt-5 lg:h-4/5\">\r\n\r\n<div className='font-bold text-3xl pb-4'> SEARCH INGREDIENT TO DATABASE</div>\r\n      <div className=\"border-t-3 border-black pt-1 text-sm \"></div>\r\n      <input\r\n        type=\"text\"\r\n        onChange={(e) => setSearchIngredientTerm(e.target.value)}\r\n        placeholder=\"Search an Ingredient\"\r\n        value={searchIngredientTerm}\r\n        className=\"outline-none text-xl sm:text-3l font-bold border-b-2 border-gray-200 p-2\"\r\n      />\r\n\r\n      {/* DISPLAY INGREDIENTS */}\r\n     \r\n\r\n              {ingredientList?.map((item) => (\r\n                <div key={item?.key} className=\"container\">\r\n                  <table className='w-full flex flex-row flex-no-wrap sm:bg-white rounded-lg overflow-hidden sm:shadow-lg my-5'></table>\r\n                  <thead lassName=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\r\n                    <tr className=\"bg-nOrange  \">\r\n                      <th\r\n\r\n                        className=\"text-sm font-semibold text-gray-900 px-6 py-4  \"\r\n                      >\r\n                        {item?.ingAdminName}\r\n                      </th>\r\n                      <th\r\n\r\n                        className=\"text-sm font-semibold text-gray-900 px-6 py-4\"\r\n                      >\r\n                        Base Size{\" \"}\r\n                      </th>\r\n                      <th\r\n\r\n                        className=\"text-sm font-semibold text-gray-900 px-6 py-4\"\r\n                      >\r\n                        Calories\r\n                      </th>\r\n                      <th\r\n\r\n                        className=\"text-sm font-semibold text-gray-900 px-6 py-4\"\r\n                      >\r\n                        TotalFat\r\n                      </th>\r\n                      <th\r\n\r\n                        className=\"text-sm font-semibold text-gray-900 px-6 py-4\"\r\n                      >\r\n                        Saturated Fat\r\n                      </th>\r\n                      <th\r\n\r\n                        className=\"text-sm font-semibold text-gray-900 px-6 py-4\"\r\n                      >\r\n                        Trans Fat\r\n                      </th>\r\n                      <th\r\n\r\n                        className=\"text-sm font-semibold text-gray-900 px-6 py-4\"\r\n                      >\r\n                        Cholesterol\r\n                      </th>\r\n                      <th\r\n\r\n                        className=\"text-sm font-semibold text-gray-900 px-6 py-4\"\r\n                      >\r\n                        Sodium\r\n                      </th>\r\n                      <th\r\n\r\n                        className=\"text-sm font-semibold text-gray-900 px-6 py-4\"\r\n                      >\r\n                        Total Carb\r\n                      </th>\r\n                      <th\r\n\r\n                        className=\"text-sm font-semibold text-gray-900 px-6 py-4\"\r\n                      >\r\n                        Dietary Fiber\r\n                      </th>\r\n                      <th\r\n\r\n                        className=\"text-sm font-semibold text-gray-900 px-6 py-4\"\r\n                      >\r\n                        Sugar\r\n                      </th>\r\n                      <th\r\n\r\n                        className=\"text-sm font-semibold text-gray-900 px-6 py-4\"\r\n                      >\r\n                        Protein\r\n                      </th>\r\n                      <th\r\n\r\n                        className=\"text-sm font-semibold text-gray-900 px-6 py-4\"\r\n                      >\r\n                        Vitamin A\r\n                      </th>\r\n                      <th\r\n\r\n                        className=\"text-sm font-semibold text-gray-900 px-6 py-4\"\r\n                      >\r\n                        Vitamin C\r\n                      </th>\r\n                      <th\r\n\r\n                        className=\"text-sm font-semibold text-gray-900 px-6 py-4\"\r\n                      >\r\n                        Calcium\r\n                      </th>\r\n                      <th\r\n\r\n                        className=\"text-sm font-semibold text-gray-900 px-6 py-4\"\r\n                      >\r\n                        Iron\r\n                      </th>\r\n                      <th\r\n\r\n                        className=\"text-sm font-semibold text-gray-900 px-6 py-4 w-full \"\r\n                      >\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            deleteDatabaseIngredient(item?._key);\r\n                          }}\r\n                          className=\"bg-white p-2 rounded-full w-8 h-8 flex items-center justify-center text-dark opacity-75 hover:opacity-100 outline-none\"\r\n                        >\r\n                          <AiTwotoneDelete />\r\n                        </button>\r\n                      </th>\r\n                    </tr>\r\n                  </thead>\r\n\r\n                  {item?.baseSize?.map((c) => (\r\n                    <tbody >\r\n                      <tr key={c?._key} className=\"bg-white border-b text-center\">\r\n                        <td className=\" text-sm font-medium text-gray-900 px-6 py-4\"></td>\r\n                        <td className=\"text-sm font-medium text-gray-900 px-6 py-4\">\r\n                          {c.baseSizeNum}\r\n                        </td>\r\n                        <td className=\"ext-sm font-medium text-gray-900 px-6 py-4\">\r\n                          {c.calories}\r\n                        </td>\r\n                        <td className=\" text-sm font-medium text-gray-900 px-6 py-4\">\r\n                          {c.totalfat}\r\n                        </td>\r\n                        <td className=\" text-sm font-medium text-gray-900 px-6 py-4\">\r\n                          {c.saturatedfat}\r\n                        </td>\r\n                        <td className=\" text-sm font-medium text-gray-900 px-6 py-4\">\r\n                          {c.transfat}\r\n                        </td>\r\n                        <td className=\" text-sm font-medium text-gray-900 px-6 py-4\">\r\n                          {c.cholesterol}\r\n                        </td>\r\n                        <td className=\" text-sm font-medium text-gray-900 px-6 py-4\">\r\n                          {c.sodium}\r\n                        </td>\r\n                        <td className=\" text-sm font-medium text-gray-900 px-6 py-4\">\r\n                          {c.totalcarb}\r\n                        </td>\r\n                        <td className=\" text-sm font-medium text-gray-900 px-6 py-4\">\r\n                          {c.dietaryFiber}\r\n                        </td>\r\n                        <td className=\" text-sm font-medium text-gray-900 px-6 py-4\">\r\n                          {c.sugar}\r\n                        </td>\r\n                        <td className=\" text-sm font-medium text-gray-900 px-6 py-4\">\r\n                          {c.protein}\r\n                        </td>\r\n                        <td className=\" text-sm font-medium text-gray-900 px-6 py-4\">\r\n                          {c.vitaminA}\r\n                        </td>\r\n                        <td className=\" text-sm font-medium text-gray-900 px-6 py-4\">\r\n                          {c.vitaminC}\r\n                        </td>\r\n                        <td className=\" text-sm font-medium text-gray-900 px-6 py-4\">\r\n                          {c.calcium}\r\n                        </td>\r\n                        <td className=\" text-sm font-medium text-gray-900 px-6 py-4\">\r\n                          {c.iron}\r\n                        </td>\r\n                      </tr>\r\n                    </tbody>\r\n                  ))}\r\n\r\n\r\n\r\n                </div>\r\n              ))}\r\n\r\n            </div>\r\n          </div>\r\n      \r\n    \r\n  );\r\n};\r\n\r\nexport default ReadIngredient;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { client } from \"../client\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ReadIngredient from \"./ReadIngredient\";\r\n\r\nconst CreateIngredient = ({ user }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const [ingAdminName, setIngAdminName] = useState(\"\");\r\n  const [baseSizeMetric, setBaseSizeMetric] = useState(\"\");\r\n  const [calories, setCalories] = useState(\"\");\r\n  const [totalFat, setTotalFat] = useState(\"\");\r\n  const [saturatedFat, setSaturatedFat] = useState(\"\");\r\n  const [transFat, settransFat] = useState(\"\");\r\n  const [cholesterol, setCholesterol] = useState(\"\");\r\n  const [sodium, setSodium] = useState(\"\");\r\n  const [totalCarbohydrates, setTotalCarbohydrates] = useState(\"\");\r\n  const [dietaryFiber, setDietaryFiber] = useState(\"\");\r\n  const [sugar, setSugar] = useState(\"\");\r\n  const [protein, setProtein] = useState(\"\");\r\n  const [vitaminA, setVitaminA] = useState(\"\");\r\n  const [vitaminC, setVitaminC] = useState(\"\");\r\n  const [calcium, setCalcium] = useState(\"\");\r\n  const [iron, setIron] = useState(\"\");\r\n  const [ModalOpen, setModalOpen] = useState(false);\r\n  const [uploadSuccessAlert, setuploadSuccessAlert] = useState(false);\r\n  const [uploadFailedAlert, setuploadFailedAlert] = useState(false);\r\n\r\n  const [baseSizeList, setBaseSizeList] = useState([]);\r\n\r\n  const ModalHandlerOpen = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const ModalHandlerClose = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const deleteBaseSizeHandler = (i) => {\r\n    let newDataArr = [...baseSizeList];\r\n    newDataArr.splice(i, 1);\r\n    setBaseSizeList(newDataArr);\r\n  };\r\n\r\n  // Adds Object To The BaseSizeArray AND resets states to make room for new object\r\n  const handleAddBaseSize = () => {\r\n    const baseSizeItem = {\r\n      _key: uuidv4(),\r\n      baseSizeNum: baseSizeMetric,\r\n      calories: parseInt(calories),\r\n      totalfat: parseInt(totalFat),\r\n      saturatedfat: parseInt(saturatedFat),\r\n      transfat: parseInt(transFat),\r\n      cholesterol: parseInt(cholesterol),\r\n      sodium: parseInt(sodium),\r\n      totalcarb: parseInt(totalCarbohydrates),\r\n      dietaryFiber: parseInt(dietaryFiber),\r\n      sugar: parseInt(sugar),\r\n      protein: parseInt(protein),\r\n      vitaminA: parseInt(vitaminA),\r\n      vitaminC: parseInt(vitaminC),\r\n      calcium: parseInt(calcium),\r\n      iron: parseInt(iron),\r\n    };\r\n\r\n    const newArray = [...baseSizeList, baseSizeItem];\r\n    setBaseSizeList(newArray);\r\n    setModalOpen(false);\r\n    setBaseSizeMetric(\"\");\r\n    setCalories(\"\");\r\n    setTotalFat(\"\");\r\n    settransFat(\"\");\r\n    setSaturatedFat(\"\");\r\n    setCholesterol(\"\");\r\n    setSodium(\"\");\r\n    setTotalCarbohydrates(\"\");\r\n    setDietaryFiber(\"\");\r\n    setSugar(\"\");\r\n    setProtein(\"\");\r\n    setVitaminA(\"\");\r\n    setVitaminC(\"\");\r\n    setCalcium(\"\");\r\n    setIron(\"\");\r\n\r\n    console.log(baseSizeList);\r\n  };\r\n\r\n  //Handler for Uploading Ingredients to Database\r\n  const uploadIngredient = () => {\r\n    if (ingAdminName !== \"\" && baseSizeList.length !== 0) {\r\n      const doc = {\r\n        _type: \"ingredientAdmin\",\r\n        _key: uuidv4(),\r\n        ingAdminName,\r\n        baseSize: baseSizeList,\r\n      };\r\n      client.create(doc).then(() => {\r\n        setBaseSizeList([]);\r\n        setIngAdminName(\"\");\r\n        console.log(doc);\r\n      });\r\n      setuploadSuccessAlert(true);\r\n\r\n      setTimeout(() => {\r\n        setuploadSuccessAlert(false);\r\n      }, 8000);\r\n    } else {\r\n        setuploadFailedAlert(true);\r\n\r\n      setTimeout(() => {\r\n        setuploadFailedAlert(false);\r\n      }, 8000);\r\n    }\r\n  };\r\n  if (user?.isAdmin) {\r\n    return (\r\n      //UPLOAD INGREDIENT BUTTON\r\n\r\n      <div className=\"flex flex-col justify-center items-center mt-5 lg:h-4/5\">\r\n        <div className=\"font-bold text-3xl pb-4\">\r\n          {\" \"}\r\n          ADD AN INGREDIENT TO DATABASE\r\n        </div>\r\n        <div className=\"flex flex-1 flex-col gap-6 lg:pl-5 \">\r\n          <input\r\n            type=\"text\"\r\n            value={ingAdminName}\r\n            onChange={(e) => setIngAdminName(e.target.value)}\r\n            placeholder=\"Ingredient Name\"\r\n            className=\"ooutline-none text-xl sm:text-3l font-bold border-b-2 border-gray-200 p-2\"\r\n          />\r\n        </div>\r\n\r\n        {/* TABLE FOR BaseArrayList */}\r\n\r\n        <div className=\"container\">\r\n          <table className=\"w-full text-sm text-left text-gray-500 dark:text-gray-400 rounded-lg overflow-hidden sm:shadow-lg my-5\">\r\n            <thead className=\"border-b\">\r\n              {/* <tbody> */}\r\n              <tr className=\"bg-nGreen \">\r\n                <th\r\n                  scope=\"col\"\r\n                  className=\"text-sm font-medium text-white px-6 py-4\"\r\n                >\r\n                  Base Size{\" \"}\r\n                </th>\r\n                <th\r\n                  scope=\"col\"\r\n                  className=\"text-sm font-medium text-white px-6 py-4\"\r\n                >\r\n                  Calories\r\n                </th>\r\n                <th\r\n                  scope=\"col\"\r\n                  className=\"text-sm font-medium text-white px-6 py-4\"\r\n                >\r\n                  Total Fat\r\n                </th>\r\n                <th\r\n                  scope=\"col\"\r\n                  className=\"text-sm font-medium text-white px-6 py-4\"\r\n                >\r\n                  Saturated Fat{\" \"}\r\n                </th>\r\n                <th\r\n                  scope=\"col\"\r\n                  className=\"text-sm font-medium text-white px-6 py-4\"\r\n                >\r\n                  Trans Fat\r\n                </th>\r\n                <th\r\n                  scope=\"col\"\r\n                  className=\"text-sm font-medium text-white px-6 py-4\"\r\n                >\r\n                  Cholesterol\r\n                </th>\r\n                <th\r\n                  scope=\"col\"\r\n                  className=\"text-sm font-medium text-white px-6 py-4\"\r\n                >\r\n                  Sodium\r\n                </th>\r\n                <th\r\n                  scope=\"col\"\r\n                  className=\"text-sm font-medium text-white px-6 py-4\"\r\n                >\r\n                  Total Carb\r\n                </th>\r\n                <th\r\n                  scope=\"col\"\r\n                  className=\"text-sm font-medium text-white px-6 py-4\"\r\n                >\r\n                  Dietary Fiber{\" \"}\r\n                </th>\r\n                <th\r\n                  scope=\"col\"\r\n                  className=\"text-sm font-medium text-white px-6 py-4\"\r\n                >\r\n                  Sugar\r\n                </th>\r\n                <th\r\n                  scope=\"col\"\r\n                  className=\"text-sm font-medium text-white px-6 py-4\"\r\n                >\r\n                  Protein\r\n                </th>\r\n                <th\r\n                  scope=\"col\"\r\n                  className=\"text-sm font-medium text-white px-6 py-4\"\r\n                >\r\n                  Vitamin A\r\n                </th>\r\n                <th\r\n                  scope=\"col\"\r\n                  className=\"text-sm font-medium text-white px-6 py-4\"\r\n                >\r\n                  Vitamin C\r\n                </th>\r\n                <th\r\n                  scope=\"col\"\r\n                  className=\"text-sm font-medium text-white px-6 py-4\"\r\n                >\r\n                  Calcium\r\n                </th>\r\n                <th\r\n                  scope=\"col\"\r\n                  className=\"text-sm font-medium text-white px-6 py-4\"\r\n                >\r\n                  Iron\r\n                </th>\r\n                <th\r\n                  scope=\"col\"\r\n                  className=\"text-sm font-medium text-white px-6 py-4\"\r\n                >\r\n                  Action\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody class=\" text-center\">\r\n              {baseSizeList.length < 1 ? (\r\n                <tr>\r\n                  <td colSpan={3}>No Base Size Data entered Yet</td>\r\n                </tr>\r\n              ) : (\r\n                baseSizeList.map((info, i) => {\r\n                  return (\r\n                    <tr key={i} className=\"bg-white border-b text-center\">\r\n                      <td>{info.baseSizeNum}</td>\r\n                      <td>{info.calories}</td>\r\n                      <td>{info.totalfat}</td>\r\n                      <td>{info.saturatedfat}</td>\r\n                      <td>{info.transfat}</td>\r\n                      <td>{info.cholesterol}</td>\r\n                      <td>{info.sodium}</td>\r\n                      <td>{info.totalcarb}</td>\r\n                      <td>{info.dietaryFiber}</td>\r\n                      <td>{info.sugar}</td>\r\n                      <td>{info.protein}</td>\r\n                      <td>{info.vitaminA}</td>\r\n                      <td>{info.vitaminC}</td>\r\n                      <td>{info.calcium}</td>\r\n                      <td>{info.iron}</td>\r\n\r\n                      <td className=\"text-red-300 pl-2 \">\r\n                        <button onClick={() => deleteBaseSizeHandler(i)}>\r\n                          Delete\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        {ModalOpen && (\r\n          <div\r\n            className=\"fixed inset-0 bg-black bg-opacity-30 backdrop-blur-sm flex flex-col \r\n            justify-center items-center  \"\r\n          >\r\n            <div className=\"fixed bg-gray-100 p-2 rounded-md h-96 w-96 overflow-scroll \">\r\n              <div className=\"flex justify-between items-start p-4 rounded-t border-b dark:border-gray-600 w-full\">\r\n                <h3 className=\"ml-2 text-xl font-semibold  items-center text-nGreen\">\r\n                  Add Ingredients\r\n                </h3>\r\n\r\n                <button\r\n                  className=\"ml-2 mt-2 mx-1 px-1 text-xs font-bold text-center transition ease-in-out delay-150 w-4 h-4 border border-gray-400 rounded bg-gray-200  text-gray-400 hover:text-white hover:-translate-y-1 hover:scale-110 hover:bg-nRed duration-300\"\r\n                  onClick={ModalHandlerClose}\r\n                >\r\n                  X\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"flex flex-1 flex-col pl-5 pr-5 mt-2 \">\r\n                <input\r\n                  type=\"text\"\r\n                  value={baseSizeMetric}\r\n                  onChange={(e) => setBaseSizeMetric(e.target.value)}\r\n                  placeholder=\"Base Size Metric\"\r\n                  className=\"outline-none text-xl sm:text-3l font-bold border-b-2 border-gray-200 p-2 w-full\"\r\n                />\r\n              </div>\r\n              <div className=\"flex flex-1 flex-col  pl-5 pr-5 mt-2 \">\r\n                <input\r\n                  type=\"number\"\r\n                  value={calories}\r\n                  step=\"1\"\r\n                  min=\"0\"\r\n                  onChange={(e) => setCalories(e.target.value)}\r\n                  placeholder=\"calories\"\r\n                  className=\"outline-none text-xl sm:text-3l font-bold border-b-2 border-gray-200 p-2 w-full \"\r\n                />\r\n              </div>\r\n              <div className=\"flex flex-1 flex-col  pl-5 pr-5   mt-2 \">\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  min=\"0\"\r\n                  value={totalFat}\r\n                  onChange={(e) => setTotalFat(e.target.value)}\r\n                  placeholder=\"totalFat\"\r\n                  className=\"outline-none text-xl sm:text-3l font-bold border-b-2 border-gray-200 p-2 w-full \"\r\n                />\r\n              </div>\r\n              <div className=\"flex flex-1 flex-col  pl-5 pr-5 mt-2 \">\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  min=\"0\"\r\n                  value={saturatedFat}\r\n                  onChange={(e) => setSaturatedFat(e.target.value)}\r\n                  placeholder=\"saturatedFat\"\r\n                  className=\"outline-none text-xl sm:text-3l font-bold border-b-2 border-gray-200 p-2 w-full \"\r\n                />\r\n              </div>\r\n              <div className=\"flex flex-1 flex-col  pl-5 pr-5 mt-2 \">\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  min=\"0\"\r\n                  value={transFat}\r\n                  onChange={(e) => settransFat(e.target.value)}\r\n                  placeholder=\"transFat\"\r\n                  className=\"outline-none text-xl sm:text-3l font-bold border-b-2 border-gray-200 p-2 w-full \"\r\n                />\r\n              </div>\r\n              <div className=\"flex flex-1 flex-col pl-5 pr-5  mt-2 \">\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  min=\"0\"\r\n                  value={cholesterol}\r\n                  onChange={(e) => setCholesterol(e.target.value)}\r\n                  placeholder=\"cholesterol\"\r\n                  className=\"outline-none text-xl sm:text-3l font-bold border-b-2 border-gray-200 p-2 w-full\"\r\n                />\r\n              </div>\r\n              <div className=\"flex flex-1 flex-col  pl-5 pr-5  mt-2 \">\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  min=\"0\"\r\n                  value={sodium}\r\n                  onChange={(e) => setSodium(e.target.value)}\r\n                  placeholder=\"sodium\"\r\n                  className=\"outline-none text-xl sm:text-3l font-bold border-b-2 border-gray-200 p-2 w-full\"\r\n                />\r\n              </div>\r\n              <div className=\"flex flex-1 flex-col  pl-5 pr-5 mt-2 \">\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  min=\"0\"\r\n                  value={totalCarbohydrates}\r\n                  onChange={(e) => setTotalCarbohydrates(e.target.value)}\r\n                  placeholder=\"total Carbohydrates\"\r\n                  className=\"outline-none text-xl sm:text-3l font-bold border-b-2 border-gray-200 p-2 w-full\"\r\n                />\r\n              </div>\r\n              <div className=\"flex flex-1 flex-col  pl-5 pr-5 mt-2 \">\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  min=\"0\"\r\n                  value={dietaryFiber}\r\n                  onChange={(e) => setDietaryFiber(e.target.value)}\r\n                  placeholder=\"dietaryFiber\"\r\n                  className=\"outline-none text-xl sm:text-3l font-bold border-b-2 border-gray-200 p-2 w-full\"\r\n                />\r\n              </div>\r\n              <div className=\"flex flex-1 flex-col  pl-5 pr-5 mt-2 \">\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  min=\"0\"\r\n                  value={sugar}\r\n                  onChange={(e) => setSugar(e.target.value)}\r\n                  placeholder=\"sugar\"\r\n                  className=\"outline-none text-xl sm:text-3l font-bold border-b-2 border-gray-200 p-2 w-full\"\r\n                />\r\n              </div>\r\n              <div className=\"flex flex-1 flex-col  pl-5 pr-5  mt-2 \">\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  min=\"0\"\r\n                  value={protein}\r\n                  onChange={(e) => setProtein(e.target.value)}\r\n                  placeholder=\"protein\"\r\n                  className=\"outline-none text-xl sm:text-3l font-bold border-b-2 border-gray-200 p-2  w-full\"\r\n                />\r\n              </div>\r\n              <div className=\"flex flex-1 flex-col  pl-5 pr-5 mt-2 \">\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  min=\"0\"\r\n                  value={vitaminA}\r\n                  onChange={(e) => setVitaminA(e.target.value)}\r\n                  placeholder=\"vitaminA\"\r\n                  className=\"outline-none text-xl sm:text-3l font-bold border-b-2 border-gray-200 p-2 w-full\"\r\n                />\r\n              </div>\r\n              <div className=\"flex flex-1 flex-col  pl-5 pr-5 mt-2 \">\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  min=\"0\"\r\n                  value={vitaminC}\r\n                  onChange={(e) => setVitaminC(e.target.value)}\r\n                  placeholder=\"vitaminC\"\r\n                  className=\"outline-none text-xl sm:text-3l font-bold border-b-2 border-gray-200 p-2  w-full\"\r\n                />\r\n              </div>\r\n              <div className=\"flex flex-1 flex-col pl-5 pr-5  mt-2 \">\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  min=\"0\"\r\n                  value={calcium}\r\n                  onChange={(e) => setCalcium(e.target.value)}\r\n                  placeholder=\"calcium\"\r\n                  className=\"outline-none text-xl sm:text-3l font-bold border-b-2 border-gray-200 p-2 w-full\"\r\n                />\r\n              </div>\r\n              <div className=\"flex flex-1 flex-col  pl-5 pr-5 mt-2 \">\r\n                <input\r\n                  type=\"number\"\r\n                  step=\"1\"\r\n                  min=\"0\"\r\n                  value={iron}\r\n                  onChange={(e) => setIron(e.target.value)}\r\n                  placeholder=\"iron\"\r\n                  className=\"outline-none text-xl sm:text-3l font-bold border-b-2 border-gray-200 p-2 w-full\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"mt-3\">\r\n                <button\r\n                  className=\"ml-5 transition ease-in-out delay-150 w-24 border border-blue-300 rounded-full bg-gray-200  text-gray-400 hover:text-white hover:-translate-y-1 hover:scale-110 hover:bg-nGreen duration-300\"\r\n                  onClick={handleAddBaseSize}\r\n                >\r\n                  CONFIRM\r\n                </button>\r\n\r\n                <button\r\n                  className=\"ml-2 transition ease-in-out delay-150 w-24 border border-blue-300 rounded-full bg-gray-200  text-gray-400 hover:text-white hover:-translate-y-1 hover:scale-110 hover:bg-nRed duration-300\"\r\n                  onClick={ModalHandlerClose}\r\n                >\r\n                  CANCEL\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {!ModalOpen && (\r\n          <button\r\n            className=\"mt-5 text-nGreen w-24 h-7.5 float-left py-1 px-1  text-xs font-bold text-center text-white bg-gray-50 rounded-full border border-blue-300\"\r\n            onClick={ModalHandlerOpen}\r\n          >\r\n            Add Base Size\r\n          </button>\r\n        )}\r\n\r\n        {uploadSuccessAlert && (\r\n          <p className=\"text-nGreen mr-5 text-xl transition-all duration-150 ease-in \">\r\n            Ingredient Successfully addedd to the database.\r\n          </p>\r\n        )}\r\n\r\n        {uploadFailedAlert && (\r\n          <p className=\"text-nGreen mr-5 text-xl transition-all duration-150 ease-in \">\r\n            Please input all required fields.\r\n          </p>\r\n        )}\r\n\r\n        <div className=\"flex justify-end items-end mt-5\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={uploadIngredient}\r\n            className=\"mb-3 transition ease-in-out delay-150 w-36 border rounded-full bg-nGreen text-white hover:text-white font-bold hover:-translate-y-1 hover:scale-110 duration-300 hover:bg-nOrange\"\r\n          >\r\n            Add To Database\r\n          </button>\r\n        </div>\r\n\r\n        <ReadIngredient\r\n          uploadSuccessAlert={uploadSuccessAlert}\r\n          setuploadSuccessAlert={setuploadSuccessAlert}\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <p className=\"text-nGreen mr-5 text-xl transition-all duration-150 ease-in \">\r\n        Unauthorized Access\r\n      </p>\r\n    );\r\n  }\r\n};\r\n\r\nexport default CreateIngredient;\r\n","import React, { useState } from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\n\r\nimport { Navbar, Feed, PinDetail, CreatePin, Search, CreateIngredient } from '../components';\r\n\r\nconst Pins = ({ user }) => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  return (\r\n    <div className=\"px-2 md:px-5\">\r\n      <div className=\"bg-gray-50\">\r\n        <Navbar searchTerm={searchTerm} setSearchTerm={setSearchTerm} user={user && user} />\r\n      </div>\r\n      <div className=\"h-full\">\r\n        <Routes>\r\n          <Route path=\"/\" element={<Feed />} />\r\n          <Route path=\"/category/:categoryId\" element={<Feed />} />\r\n          <Route path=\"/pin-detail/:pinId\" element={<PinDetail user={user && user} />} />\r\n          <Route path=\"/create-pin\" element={<CreatePin user={user && user} />} />\r\n          <Route path=\"/search\" element={<Search searchTerm={searchTerm} setSearchTerm={setSearchTerm} />} />\r\n          <Route path=\"/create-ingredient\" element={<CreateIngredient user={user && user}  />} />\r\n        </Routes>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pins;\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { HiMenu } from 'react-icons/hi';\r\nimport { AiFillCloseCircle } from 'react-icons/ai';\r\nimport { Link, Route, Routes } from 'react-router-dom';\r\n\r\nimport { Sidebar, UserProfile, Followers, Following } from '../components';\r\nimport Pins from './Pins';\r\nimport { client } from '../client';\r\nimport logoss from '../assets/logo2s.png';\r\n\r\nimport { userQuery } from '../utils/data';\r\n\r\nconst Home = () => {\r\n  const [toggleSidebar, setToggleSidebar] = useState(false);\r\n  const [user, setUser] = useState();\r\n  const scrollRef = useRef(null);\r\n\r\n  const userInfo = localStorage.getItem('user') !== 'undefined' ? JSON.parse(localStorage.getItem('user')) : localStorage.clear();\r\n\r\n  useEffect(() => {\r\n    const query = userQuery(userInfo?.sub);\r\n\r\n    client.fetch(query).then((data) => {\r\n      setUser(data[0]);\r\n    });\r\n  }, [userInfo?.sub]);\r\n\r\n  useEffect(() => {\r\n    scrollRef.current.scrollTo(0, 0);\r\n  });\r\n\r\n  return (\r\n    <div className=\"flex bg-gray-50 md:flex-row flex-col h-screen transition-height duration-75 ease-out\">\r\n      <div className=\"hidden md:flex h-screen flex-initial\">\r\n        <Sidebar user={user && user} />\r\n      </div>\r\n      <div className=\"flex md:hidden flex-row\">\r\n        <div className=\"p-2 w-full flex flex-row justify-between items-center shadow-md\">\r\n          <HiMenu fontSize={40} className=\"cursor-pointer\" onClick={() => setToggleSidebar(true)} />\r\n          <Link to=\"/\">\r\n            <img src={logoss} alt=\"logos\" className=\"w-28\" />\r\n          </Link>\r\n          <Link to={`user-profile/${user?._id}`}>\r\n            <img src={user?.image} alt=\"user-pic\" className=\"w-9 h-9 rounded-full \" />\r\n          </Link>\r\n        </div>\r\n        {toggleSidebar && (\r\n        <div className=\"fixed w-4/5 bg-white h-screen overflow-y-auto shadow-md z-10 animate-slide-in\">\r\n          <div className=\"absolute w-full flex justify-end items-center p-2\">\r\n            <AiFillCloseCircle fontSize={30} className=\"cursor-pointer\" onClick={() => setToggleSidebar(false)} />\r\n          </div>\r\n          <Sidebar closeToggle={setToggleSidebar} user={user && user} />\r\n        </div>\r\n        )}\r\n      </div>\r\n      <div className=\"pb-2 flex-1 h-screen overflow-y-scroll\" ref={scrollRef}>\r\n        <Routes>\r\n          <Route path=\"/user-profile/:userId\" element={<UserProfile />} />\r\n          {/* <Route path=\"/user-profile/:userId/followers\" element={<Followers />} />\r\n          <Route path=\"/user-profile/:userId/following\" element={<Following />} /> */}\r\n          <Route path=\"/*\" element={<Pins user={user && user} />} />\r\n        </Routes>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Home;\r\n","import React, { useEffect } from 'react';\r\nimport { Routes, Route, useNavigate } from 'react-router-dom';\r\n\r\nimport { Login } from './components';\r\nimport Home from './container/Home';\r\n\r\nconst App = () => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const User = localStorage.getItem('user') !== 'undefined' ? JSON.parse(localStorage.getItem('user')) : localStorage.clear();\r\n\r\n    if (!User) navigate('/login');\r\n  }, []);\r\n\r\n  return (\r\n    <Routes>\r\n      <Route path=\"login\" element={<Login />} />\r\n      <Route path=\"/*\" element={<Home />} />\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default App;","/* eslint-disable*/\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker.'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport App from './App';\r\nimport './index.css';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// eto na si jok\r\n//ETO NA SI JERIS GALING AKO SA MAIN\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n"],"sourceRoot":""}